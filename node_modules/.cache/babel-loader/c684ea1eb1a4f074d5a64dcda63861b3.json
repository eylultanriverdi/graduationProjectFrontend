{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField, Card } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [totalProtein, setTotalProtein] = useState(0);\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        // Toplam kalori değerini hesapla\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          return sum + parseInt(calorieInfo.totalCalorie);\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const calculateTotalProtein = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        // Toplam kalori değerini hesapla\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          return sum + parseInt(calorieInfo.proteinValue);\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  useEffect(() => {\n    setTotalCalories(calculateTotalCalories());\n  }, [calorieInfoList]);\n  useEffect(() => {\n    setTotalProtein(calculateTotalProtein());\n  }, [calorieInfoList]);\n  const renderProductList = calorieInfoList && calorieInfoList.map(calorieInfo => {\n    const {\n      products\n    } = calorieInfo;\n    return products && products.map(product => {\n      const {\n        productId,\n        productName,\n        description,\n        productImage,\n        carbohydrateValue,\n        glutenFree,\n        glutenValue,\n        ketogenicDiet,\n        oilValue,\n        proteinValue,\n        saltFree,\n        calorieValue\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: {\n          marginTop: '50px',\n          marginBottom: '80px',\n          padding: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              style: {\n                marginBottom: '10px',\n                color: \"#9c27b0\"\n              },\n              children: productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Protein Value: \", proteinValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Carbohydrate: \", carbohydrateValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Oil Value: \", oilValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Gluten Value: \", glutenValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Gluten Free: \", glutenFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Ketogenic Diet: \", ketogenicDiet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Salt Free: \", saltFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Kalori: \", calorieValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Calorie Info Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              width: '200px',\n              height: '200px',\n              marginBottom: '20px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: totalCalories / 3000 * 100,\n              size: 200,\n              thickness: 2,\n              style: {\n                color: \"#9c27b0\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                color: \"9c27b0\",\n                marginBottom: '20px',\n                marginTop: '20px'\n              },\n              children: totalCalories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              style: {\n                position: 'absolute',\n                top: '80%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                color: \"#9c27b0\",\n                marginBottom: '20px',\n                marginTop: '20px'\n              },\n              children: [\"Total Protein Value: \", totalProtein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), renderProductList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"d3Rsq53rkxSWUmdzKBuNO/xsnmk=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => ({\n  allProducts: state.allProducts.products,\n  calorieInfoList: state.calorieInfoList.products\n});\nconst mapDispatchToProps = {\n  setProducts,\n  setCalorieInfoList,\n  createCalorieInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","TextField","Card","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","totalProtein","setTotalProtein","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","total","currentDate","Date","toISOString","split","length","productsWithSameDate","filter","calorieInfo","entryDate","createDate","reduce","sum","parseInt","totalCalorie","calculateTotalProtein","proteinValue","fetchCalorieInfoList","renderProductList","productId","productName","description","carbohydrateValue","glutenFree","glutenValue","ketogenicDiet","oilValue","saltFree","calorieValue","elevation","style","marginTop","marginBottom","padding","position","children","container","spacing","item","xs","sm","variant","component","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","flexDirection","width","height","value","size","thickness","top","left","transform","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField, Card } from '@mui/material';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n  const [totalProtein, setTotalProtein] = useState(0);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        // Toplam kalori değerini hesapla\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.totalCalorie);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n\r\n  const calculateTotalProtein = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        // Toplam kalori değerini hesapla\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.proteinValue);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalCalories(calculateTotalCalories());\r\n  }, [calorieInfoList]);\r\n\r\n  useEffect(() => {\r\n    setTotalProtein(calculateTotalProtein());\r\n  }, [calorieInfoList]);\r\n\r\n  const renderProductList = calorieInfoList && calorieInfoList.map((calorieInfo) => {\r\n    const { products } = calorieInfo;\r\n\r\n    return products && products.map((product) => {\r\n      const {\r\n        productId,\r\n        productName,\r\n        description,\r\n        productImage,\r\n        carbohydrateValue,\r\n        glutenFree,\r\n        glutenValue,\r\n        ketogenicDiet,\r\n        oilValue,\r\n        proteinValue,\r\n        saltFree,\r\n        calorieValue\r\n      } = product;\r\n\r\n      return (\r\n        <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px', color: \"#9c27b0\" }}>\r\n                {productName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                {description}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Protein Value: {proteinValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Carbohydrate: {carbohydrateValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Oil Value: {oilValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Gluten Value: {glutenValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Gluten Free: {glutenFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Ketogenic Diet: {ketogenicDiet}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Salt Free: {saltFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Kalori: {calorieValue}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"white\" }}>Calorie Info Page</h1>\r\n      <div>\r\n      <Card variant=\"outlined\" style={{ marginBottom: '20px' }}>\r\n  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div style={{ position: 'relative', width: '200px', height: '200px', marginBottom: '20px', marginTop: '20px' }}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={(totalCalories / 3000) * 100}\r\n        size={200}\r\n        thickness={2}\r\n        style={{ color: \"#9c27b0\" }}\r\n      />\r\n      <Typography variant=\"h4\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', color: \"9c27b0\", marginBottom: '20px', marginTop: '20px' }}>\r\n        {totalCalories}\r\n      </Typography>\r\n      <Typography variant=\"h4\" style={{ position: 'absolute', top: '80%', left: '50%', transform: 'translate(-50%, -50%)', color: \"#9c27b0\", marginBottom: '20px', marginTop: '20px' }}>\r\n        Total Protein Value: {totalProtein}\r\n      </Typography>\r\n    </div>\r\n  </div>\r\n</Card>\r\n\r\n\r\n      </div>\r\n      {renderProductList}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProducts: state.allProducts.products,\r\n  calorieInfoList: state.calorieInfoList.products\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setProducts,\r\n  setCalorieInfoList,\r\n  createCalorieInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);"],"mappings":"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"},"metadata":{},"sourceType":"module"}