{"ast":null,"code":"var _jsxFileName = \"/home/eylul/Desktop/reacttest/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ListForm from './ListForm';\nimport { FaEdit } from 'react-icons/fa';\nimport { AiOutlineCloseSquare } from 'react-icons/ai';\nimport RLDD from 'react-list-drag-and-drop/lib/RLDD';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  lists,\n  completeList,\n  removeList,\n  updateList\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateList(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  const sıralamaUser = (listId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setLists(sıralama => sıralama.map(item => item.id === listId ? newValue : item));\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(ListForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return lists.map((list, index, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: list.isComplete ? 'list-row complete' : 'list-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeList(list.id),\n      children: list.text\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineCloseSquare, {\n        onClick: () => removeList(list.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaEdit, {\n        onClick: () => setEdit({\n          id: list.id,\n          value: list.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RLDD, {\n        item: item,\n        itemRenderer: item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this);\n        },\n        onChange: sıralamaUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this));\n};\n\n_s(List, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/eylul/Desktop/reacttest/src/components/List.js"],"names":["React","useState","ListForm","FaEdit","AiOutlineCloseSquare","RLDD","List","lists","completeList","removeList","updateList","edit","setEdit","id","value","submitUpdate","sıralamaUser","listId","newValue","text","test","setLists","sıralama","map","item","list","index","isComplete","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,IAAP,MAAiB,mCAAjB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AAAA;;AAE9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC7BY,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACC,IAAV,IAAkB,QAAQC,IAAR,CAAaF,QAAQ,CAACC,IAAtB,CAAtB,EAAmD;AAC/C;AACH;;AACDE,IAAAA,QAAQ,CAACC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAKA,IAAI,CAACX,EAAL,KAAYI,MAAZ,GAAqBC,QAArB,GAAgCM,IAAtD,CAAb,CAAR;AACA,GALJ;;AAOA,MAAIb,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOR,KAAK,CAACgB,GAAN,CAAU,CAACE,IAAD,EAAOC,KAAP,EAAaF,IAAb,kBACb;AAAK,IAAA,SAAS,EAAEC,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;AAAA,4BACI;AAAmB,MAAA,OAAO,EAAE,MAAMnB,YAAY,CAACiB,IAAI,CAACZ,EAAN,CAA9C;AAAA,gBACKY,IAAI,CAACN;AADV,OAAUM,IAAI,CAACZ,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,oBAAD;AACI,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACgB,IAAI,CAACZ,EAAN,CAD7B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEY,IAAI,CAACZ,EAAX;AAAeC,UAAAA,KAAK,EAAEW,IAAI,CAACN;AAA3B,SAAD,CAD1B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cALJ,eAUK,QAAC,IAAD;AACG,QAAA,IAAI,EAAEK,IADT;AAEG,QAAA,YAAY,EAAGA,IAAD,IAAU;AACpB,8BACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBAAuBA,IAAI,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SANJ;AAOG,QAAA,QAAQ,EAAEZ;AAPb;AAAA;AAAA;AAAA;AAAA,cAVL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAyEU,KAAzE;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AA2BH,CArDD;;GAAMpB,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport ListForm from './ListForm'\nimport { FaEdit } from 'react-icons/fa'\nimport { AiOutlineCloseSquare } from 'react-icons/ai'\nimport RLDD from 'react-list-drag-and-drop/lib/RLDD';\n\n\nconst List = ({ lists, completeList, removeList, updateList }) => {\n\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n    const submitUpdate = value => {\n        updateList(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        })\n    }\n\n    const sıralamaUser = (listId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n        setLists(sıralama => sıralama.map(item => (item.id === listId ? newValue : item)))\n       }\n\n    if (edit.id) {\n        return <ListForm edit={edit} onSubmit={submitUpdate} ></ListForm>\n    }\n\n    return lists.map((list, index,item) => (\n        <div className={list.isComplete ? 'list-row complete' : 'list-row'} key={index}>\n            <div key={list.id} onClick={() => completeList(list.id)}>\n                {list.text}\n            </div>\n            <div className=\"icons\">\n                <AiOutlineCloseSquare\n                    onClick={() => removeList(list.id)}\n                    className='delete-icon'\n                ></AiOutlineCloseSquare>\n                <FaEdit\n                    onClick={() => setEdit({ id: list.id, value: list.text })}\n                    className='edit-icon'\n                >\n                </FaEdit>\n                 <RLDD\n                    item={item}\n                    itemRenderer={(item) => {\n                        return (\n                            <div className=\"item\">{item.title}</div>\n                        );\n                    }}\n                    onChange={sıralamaUser}\n                /> \n            </div>\n        </div>\n    ))\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}