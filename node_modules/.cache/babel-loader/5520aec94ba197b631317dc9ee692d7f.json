{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isRectValid(r) {\n  return r && r.width >= 0 && r.height >= 0;\n}\n\nexports.isRectValid = isRectValid;\n\nfunction areRectsOverlapping(r0, r1) {\n  var r = getIntersectionRect(r0, r1);\n  return r.width > 0 && r.height > 0;\n}\n\nexports.areRectsOverlapping = areRectsOverlapping;\n\nfunction getAreaOfIntersection(r0, r1) {\n  var rect = getIntersectionRect(r0, r1);\n  return getRectArea(rect);\n}\n\nexports.getAreaOfIntersection = getAreaOfIntersection;\n\nfunction getIntersectionRect(r0, r1) {\n  var r0b = getRectBounds(r0);\n  var r1b = getRectBounds(r1);\n  var x1 = r0b.left;\n  var y1 = r0b.top;\n  var x2 = r0b.right;\n  var y2 = r0b.bottom;\n  var x3 = r1b.left;\n  var y3 = r1b.top;\n  var x4 = r1b.right;\n  var y4 = r1b.bottom;\n  var x5 = Math.max(x1, x3);\n  var y5 = Math.max(y1, y3);\n  var x6 = Math.min(x2, x4);\n  var y6 = Math.min(y2, y4);\n  return {\n    left: x5,\n    width: x6 - x5,\n    top: y5,\n    height: y6 - y5\n  };\n}\n\nexports.getIntersectionRect = getIntersectionRect;\n\nfunction getRectArea(r) {\n  return isRectValid(r) ? r.width * r.height : 0;\n}\n\nexports.getRectArea = getRectArea;\n\nfunction getRectBounds(r) {\n  var top = r.top;\n  var left = r.left;\n  var bottom = r.top + r.height;\n  var right = r.left + r.width;\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right\n  };\n}\n\nexports.getRectBounds = getRectBounds;\n\nfunction getRectPoints(r) {\n  var _a = getRectBounds(r),\n      top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n\n  var topLeft = {\n    x: left,\n    y: top\n  };\n  var topRight = {\n    x: right,\n    y: top\n  };\n  var bottomLeft = {\n    x: left,\n    y: bottom\n  };\n  var bottomRight = {\n    x: right,\n    y: bottom\n  };\n  return {\n    topLeft: topLeft,\n    topRight: topRight,\n    bottomLeft: bottomLeft,\n    bottomRight: bottomRight\n  };\n}\n\nexports.getRectPoints = getRectPoints;\n\nfunction pointToString(p) {\n  return \"Point{\" + p.x + \",\" + p.y + \"}\";\n}\n\nexports.pointToString = pointToString;\n\nfunction rectToString(r) {\n  var bounds = getRectBounds(r);\n  return \"Rect{\" + JSON.stringify(bounds) + \"}\";\n}\n\nexports.rectToString = rectToString;","map":{"version":3,"sources":["../src/Geometry.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isRectValid(r) {\n    return r && r.width >= 0 && r.height >= 0;\n}\nexports.isRectValid = isRectValid;\nfunction areRectsOverlapping(r0, r1) {\n    var r = getIntersectionRect(r0, r1);\n    return r.width > 0 && r.height > 0;\n}\nexports.areRectsOverlapping = areRectsOverlapping;\nfunction getAreaOfIntersection(r0, r1) {\n    var rect = getIntersectionRect(r0, r1);\n    return getRectArea(rect);\n}\nexports.getAreaOfIntersection = getAreaOfIntersection;\nfunction getIntersectionRect(r0, r1) {\n    var r0b = getRectBounds(r0);\n    var r1b = getRectBounds(r1);\n    var x1 = r0b.left;\n    var y1 = r0b.top;\n    var x2 = r0b.right;\n    var y2 = r0b.bottom;\n    var x3 = r1b.left;\n    var y3 = r1b.top;\n    var x4 = r1b.right;\n    var y4 = r1b.bottom;\n    var x5 = Math.max(x1, x3);\n    var y5 = Math.max(y1, y3);\n    var x6 = Math.min(x2, x4);\n    var y6 = Math.min(y2, y4);\n    return { left: x5, width: x6 - x5, top: y5, height: y6 - y5 };\n}\nexports.getIntersectionRect = getIntersectionRect;\nfunction getRectArea(r) {\n    return isRectValid(r) ? r.width * r.height : 0;\n}\nexports.getRectArea = getRectArea;\nfunction getRectBounds(r) {\n    var top = r.top;\n    var left = r.left;\n    var bottom = r.top + r.height;\n    var right = r.left + r.width;\n    return { top: top, left: left, bottom: bottom, right: right };\n}\nexports.getRectBounds = getRectBounds;\nfunction getRectPoints(r) {\n    var _a = getRectBounds(r), top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    var topLeft = { x: left, y: top };\n    var topRight = { x: right, y: top };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    return { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight };\n}\nexports.getRectPoints = getRectPoints;\nfunction pointToString(p) {\n    return \"Point{\" + p.x + \",\" + p.y + \"}\";\n}\nexports.pointToString = pointToString;\nfunction rectToString(r) {\n    var bounds = getRectBounds(r);\n    return \"Rect{\" + JSON.stringify(bounds) + \"}\";\n}\nexports.rectToString = rectToString;\n//# sourceMappingURL=Geometry.js.map"]},"metadata":{},"sourceType":"script"}