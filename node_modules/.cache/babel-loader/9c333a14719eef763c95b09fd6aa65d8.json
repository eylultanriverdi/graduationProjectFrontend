{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [addedProducts, setAddedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Yükleniyor durumunu takip etmek için kullanılan state\n\n  const fetchProducts = async () => {\n    try {\n      setIsLoading(true); // Yükleniyor durumunu true yap\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n        setIsLoading(false); // Yükleniyor durumunu false yap\n      }\n    } catch (error) {\n      console.log('Error:', error);\n      setIsLoading(false); // Yükleniyor durumunu false yap\n    }\n  };\n\n  const renderProducts = () => {\n    _s();\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n    const calculateTotalCalories = () => {\n      let total = 0;\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n      if (calorieInfoList && calorieInfoList.length > 0) {\n        // İlgili tarih bilgisine sahip ürünleri bul\n        const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n          const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n          return entryDate === currentDate;\n        });\n        if (productsWithSameDate.length > 0) {\n          // Toplam kalori değerini hesapla\n          total = productsWithSameDate.reduce((sum, calorieInfo) => {\n            return sum + parseInt(calorieInfo.totalCalorie);\n          }, 0);\n        }\n      }\n      return total;\n    };\n    const fetchCalorieInfoList = async () => {\n      try {\n        const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n        if (resp && resp.status === 200) {\n          props.setCalorieInfoList(resp.data);\n        }\n      } catch (error) {\n        console.log('Error:', error);\n      }\n    };\n    useEffect(() => {\n      fetchProducts();\n    }, [currentPage]);\n    useEffect(() => {\n      fetchCalorieInfoList();\n    }, []);\n    useEffect(() => {\n      setTotalCalories(calculateTotalCalories());\n    }, [calorieInfoList]);\n    const handleAddToList = async productId => {\n      const currentDate = new Date().toISOString().slice(0, 10);\n      try {\n        const selectedProduct = allProducts.find(product => product._id === productId);\n        const {\n          _id,\n          productName,\n          calorie\n        } = selectedProduct;\n        const calorieInfo = {\n          productId: _id,\n          productName: productName,\n          totalCalorie: calorie,\n          createDate: currentDate\n        };\n        const resp = await axios.post('http://localhost:3001/calorieInfo', calorieInfo);\n        if (resp && resp.status === 201) {\n          createCalorieInfo(calorieInfo);\n          setTotalCalories(totalCalories + calorie);\n          setAddedProducts([...addedProducts, calorieInfo]);\n        }\n      } catch (error) {\n        console.log('Error:', error);\n      }\n    };\n    return allProducts.map(product => {\n      const {\n        _id,\n        productName,\n        calorie,\n        productImage\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: productImage,\n            alt: productName,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Kalori: \", calorie]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: () => handleAddToList(_id),\n            disabled: addedProducts.find(addedProduct => addedProduct.productId === _id),\n            children: \"Listeye Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  _s(renderProducts, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"G\\xFCnl\\xFCk Kalori Takibi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: [\"Toplam Kalori: \", totalCalories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: renderProducts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(CalorieInfoPage, \"2ToolWf/ioXaA6sRH3eYumDYcPk=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => {\n  return {\n    allProducts: state.products.allProducts,\n    calorieInfoList: state.products.calorieInfoList\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCalorieInfo: calorieInfo => dispatch(createCalorieInfo(calorieInfo)),\n    setCalorieInfoList: calorieInfoList => dispatch(setCalorieInfoList(calorieInfoList)),\n    setProducts: products => dispatch(setProducts(products))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","TextField","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s2","_s","$RefreshSig$","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","addedProducts","setAddedProducts","isLoading","setIsLoading","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","renderProducts","fileName","_jsxFileName","lineNumber","columnNumber","calculateTotalCalories","total","currentDate","Date","toISOString","split","length","productsWithSameDate","filter","calorieInfo","entryDate","createDate","reduce","sum","parseInt","totalCalorie","fetchCalorieInfoList","handleAddToList","productId","slice","selectedProduct","find","_id","productName","calorie","post","item","xs","sm","md","lg","children","elevation","sx","p","src","alt","style","width","variant","color","fullWidth","onClick","disabled","addedProduct","container","spacing","_c","mapStateToProps","state","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n  const [addedProducts, setAddedProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // Yükleniyor durumunu takip etmek için kullanılan state\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setIsLoading(true); // Yükleniyor durumunu true yap\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n        setIsLoading(false); // Yükleniyor durumunu false yap\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n      setIsLoading(false); // Yükleniyor durumunu false yap\r\n    }\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n  const calculateTotalCalories = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        // Toplam kalori değerini hesapla\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.totalCalorie);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalCalories(calculateTotalCalories());\r\n  }, [calorieInfoList]);\r\n\r\n  const handleAddToList = async (productId) => {\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n\r\n    try {\r\n      const selectedProduct = allProducts.find((product) => product._id === productId);\r\n      const { _id, productName, calorie } = selectedProduct;\r\n      const calorieInfo = {\r\n        productId: _id,\r\n        productName: productName,\r\n        totalCalorie: calorie,\r\n        createDate: currentDate\r\n      };\r\n\r\n      const resp = await axios.post('http://localhost:3001/calorieInfo', calorieInfo);\r\n      if (resp && resp.status === 201) {\r\n        createCalorieInfo(calorieInfo);\r\n        setTotalCalories(totalCalories + calorie);\r\n        setAddedProducts([...addedProducts, calorieInfo]);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n\r\n    return allProducts.map((product) => {\r\n      const { _id, productName, calorie, productImage } = product;\r\n      return (\r\n        <Grid item key={_id} xs={12} sm={6} md={4} lg={3}>\r\n          <Paper elevation={3} sx={{ p: 2 }}>\r\n            <img src={productImage} alt={productName} style={{ width: '100%' }} />\r\n            <Typography variant=\"h6\">{productName}</Typography>\r\n            <Typography variant=\"body1\">Kalori: {calorie}</Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={() => handleAddToList(_id)}\r\n              disabled={addedProducts.find((addedProduct) => addedProduct.productId === _id)}\r\n            >\r\n              Listeye Ekle\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\">Günlük Kalori Takibi</Typography>\r\n      <Typography variant=\"h5\">Toplam Kalori: {totalCalories}</Typography>\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {renderProducts()}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allProducts: state.products.allProducts,\r\n    calorieInfoList: state.products.calorieInfoList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCalorieInfo: (calorieInfo) => dispatch(createCalorieInfo(calorieInfo)),\r\n    setCalorieInfoList: (calorieInfoList) => dispatch(setCalorieInfoList(calorieInfoList)),\r\n    setProducts: (products) => dispatch(setProducts(products))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}