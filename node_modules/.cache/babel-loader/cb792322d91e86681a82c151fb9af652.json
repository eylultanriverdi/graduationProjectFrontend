{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Signal = function () {\n  function Signal() {\n    this.listeners = [];\n  }\n\n  Signal.prototype.addListener = function (listener) {\n    this.listeners.push(listener);\n  };\n\n  Signal.prototype.removeListener = function (listener) {\n    var index = this.listeners.indexOf(listener);\n\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  };\n\n  Signal.prototype.dispatch = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this.listeners.forEach(function (listener) {\n      listener.apply(void 0, args);\n    });\n  };\n\n  return Signal;\n}();\n\nexports.default = Signal;","map":{"version":3,"sources":["../src/Signal.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,MAAA,GAAA,YAAA;AAIE,WAAA,MAAA,GAAA;AACE,SAAK,SAAL,GAAiB,EAAjB;AACD;;AAEM,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAAgC;AAC9B,SAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;AACD,GAFM;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB,QAAtB,EAAmC;AACjC,QAAM,KAAK,GAAG,KAAK,SAAL,CAAe,OAAf,CAAuB,QAAvB,CAAd;;AACA,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd,WAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EAA6B,CAA7B;AACD;AACF,GALM;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AAAgB,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACd,SAAK,SAAL,CAAe,OAAf,CAAuB,UAAA,QAAA,EAAQ;AAC7B,MAAA,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,IAAZ;AACD,KAFD;AAGD,GAJM;;AAKT,SAAA,MAAA;AAAC,CAxBD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Signal = (function () {\n    function Signal() {\n        this.listeners = [];\n    }\n    Signal.prototype.addListener = function (listener) {\n        this.listeners.push(listener);\n    };\n    Signal.prototype.removeListener = function (listener) {\n        var index = this.listeners.indexOf(listener);\n        if (index >= 0) {\n            this.listeners.splice(index, 1);\n        }\n    };\n    Signal.prototype.dispatch = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.listeners.forEach(function (listener) {\n            listener.apply(void 0, args);\n        });\n    };\n    return Signal;\n}());\nexports.default = Signal;\n//# sourceMappingURL=Signal.js.map"]},"metadata":{},"sourceType":"script"}