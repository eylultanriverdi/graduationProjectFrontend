{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Card } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    calorieInfoList\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [totalProtein, setTotalProtein] = useState(0);\n  const [totalCarbohydrate, setTotalCarbohydrate] = useState(0);\n  const [totalOil, setTotalOil] = useState(0);\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0];\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          return sum + parseInt(calorieInfo.totalCalorie);\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const calculateTotalProtein = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0];\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          const products = calorieInfo.products;\n          const productProteinSum = products.reduce((productSum, product) => {\n            return productSum + parseInt(product.proteinValue);\n          }, 0);\n          return sum + productProteinSum;\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const calculateTotalCarbohydrate = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0];\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          const products = calorieInfo.products;\n          const productCarbohydrateValueSum = products.reduce((productSum, product) => {\n            return productSum + parseInt(product.carbohydrateValue);\n          }, 0);\n          return sum + productCarbohydrateValueSum;\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const calculateTotalOil = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0];\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          const products = calorieInfo.products;\n          const productOilValueSum = products.reduce((productSum, product) => {\n            const oilValue = parseInt(product.oilValue);\n            return isNaN(oilValue) ? productSum : productSum + oilValue;\n          }, 0);\n          return sum + productOilValueSum;\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  useEffect(() => {\n    setTotalCalories(calculateTotalCalories());\n  }, [calorieInfoList]);\n  useEffect(() => {\n    setTotalProtein(calculateTotalProtein());\n  }, [calorieInfoList]);\n  useEffect(() => {\n    setTotalCarbohydrate(calculateTotalCarbohydrate());\n  }, [calorieInfoList]);\n  useEffect(() => {\n    setTotalOil(calculateTotalOil());\n  }, [calorieInfoList]);\n  const renderProductList = calorieInfoList && calorieInfoList.map(calorieInfo => {\n    const {\n      products\n    } = calorieInfo;\n    return products && products.map(product => {\n      const {\n        productId,\n        productName,\n        description,\n        productImage,\n        carbohydrateValue,\n        glutenFree,\n        glutenValue,\n        ketogenicDiet,\n        oilValue,\n        proteinValue,\n        saltFree,\n        calorieValue\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: {\n          marginTop: '50px',\n          marginBottom: '80px',\n          padding: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              style: {\n                marginBottom: '10px',\n                color: \"#9c27b0\"\n              },\n              children: productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Protein Value: \", proteinValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Carbohydrate: \", carbohydrateValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Oil Value: \", oilValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Gluten Value: \", glutenValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Gluten Free: \", glutenFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Ketogenic Diet: \", ketogenicDiet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Salt Free: \", saltFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px',\n                color: \"#9c27b0\"\n              },\n              children: [\"Kalori: \", calorieValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      style: {\n        marginBottom: '20px',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        style: {\n          marginLeft: '20px',\n          fontSize: 'xx-large'\n        },\n        children: \"Calorie Info Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        style: {\n          marginBottom: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              width: '200px',\n              height: '200px',\n              marginBottom: '20px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: totalCalories / 3000 * 100,\n              size: 200,\n              thickness: 2,\n              style: {\n                color: \"#9c27b0\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)'\n              },\n              children: totalCalories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: \"Total Protein Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: \"Total Carbohydrate Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: \"Total Oil Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: totalProtein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: totalCarbohydrate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"#9c27b0\",\n                      fontWeight: \"bold\"\n                    },\n                    children: totalOil\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), renderProductList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"ou/OdqcptrbDV+cpTvVvo1wLksg=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => ({\n  allProducts: state.allProducts.products,\n  calorieInfoList: state.calorieInfoList.products\n});\nconst mapDispatchToProps = {\n  setProducts,\n  setCalorieInfoList,\n  createCalorieInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Card","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","totalProtein","setTotalProtein","totalCarbohydrate","setTotalCarbohydrate","totalOil","setTotalOil","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","total","currentDate","Date","toISOString","split","length","productsWithSameDate","filter","calorieInfo","entryDate","createDate","reduce","sum","parseInt","totalCalorie","calculateTotalProtein","productProteinSum","productSum","proteinValue","calculateTotalCarbohydrate","productCarbohydrateValueSum","carbohydrateValue","calculateTotalOil","productOilValueSum","oilValue","isNaN","fetchCalorieInfoList","renderProductList","productId","productName","description","glutenFree","glutenValue","ketogenicDiet","saltFree","calorieValue","elevation","style","marginTop","marginBottom","padding","position","children","container","spacing","item","xs","sm","variant","component","color","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","fontSize","display","justifyContent","alignItems","flexDirection","width","height","value","size","thickness","top","left","transform","sx","minWidth","fontWeight","_c","mapStateToProps","state","allProducts","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Card } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { calorieInfoList } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); \r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n  const [totalProtein, setTotalProtein] = useState(0);\r\n  const [totalCarbohydrate, setTotalCarbohydrate] = useState(0);\r\n  const [totalOil, setTotalOil] = useState(0);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; \r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.totalCalorie);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n\r\n  const calculateTotalProtein = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          const products = calorieInfo.products;\r\n          const productProteinSum = products.reduce((productSum, product) => {\r\n            return productSum + parseInt(product.proteinValue);\r\n          }, 0);\r\n          return sum + productProteinSum;\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const calculateTotalCarbohydrate = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          const products = calorieInfo.products;\r\n          const productCarbohydrateValueSum = products.reduce((productSum, product) => {\r\n            return productSum + parseInt(product.carbohydrateValue);\r\n          }, 0);\r\n          return sum + productCarbohydrateValueSum;\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const calculateTotalOil = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n  \r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n  \r\n      if (productsWithSameDate.length > 0) {\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          const products = calorieInfo.products;\r\n          const productOilValueSum = products.reduce((productSum, product) => {\r\n            const oilValue = parseInt(product.oilValue);\r\n            return isNaN(oilValue) ? productSum : productSum + oilValue;\r\n          }, 0);\r\n          return sum + productOilValueSum;\r\n        }, 0);\r\n      }\r\n    }\r\n  \r\n    return total;\r\n  };\r\n  \r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalCalories(calculateTotalCalories());\r\n  }, [calorieInfoList]);\r\n\r\n  useEffect(() => {\r\n    setTotalProtein(calculateTotalProtein());\r\n  }, [calorieInfoList]);\r\n\r\n  useEffect(() => {\r\n    setTotalCarbohydrate(calculateTotalCarbohydrate());\r\n  }, [calorieInfoList]);\r\n\r\n  useEffect(() => {\r\n    setTotalOil(calculateTotalOil());\r\n  }, [calorieInfoList]);\r\n\r\n\r\n  const renderProductList = calorieInfoList && calorieInfoList.map((calorieInfo) => {\r\n    const { products } = calorieInfo;\r\n\r\n    return products && products.map((product) => {\r\n      const {\r\n        productId,\r\n        productName,\r\n        description,\r\n        productImage,\r\n        carbohydrateValue,\r\n        glutenFree,\r\n        glutenValue,\r\n        ketogenicDiet,\r\n        oilValue,\r\n        proteinValue,\r\n        saltFree,\r\n        calorieValue\r\n      } = product;\r\n\r\n      return (\r\n        <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px', color: \"#9c27b0\" }}>\r\n                {productName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                {description}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Protein Value: {proteinValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Carbohydrate: {carbohydrateValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Oil Value: {oilValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Gluten Value: {glutenValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Gluten Free: {glutenFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Ketogenic Diet: {ketogenicDiet}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Salt Free: {saltFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px', color: \"#9c27b0\" }}>\r\n                Kalori: {calorieValue}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card variant=\"outlined\" style={{ marginBottom: '20px', marginTop: '20px' }}>\r\n        <Typography color=\"secondary\" style={{ marginLeft: '20px', fontSize: 'xx-large'}}>\r\n        Calorie Info Page\r\n        </Typography>\r\n      </Card>\r\n      <div>\r\n        <Card variant=\"outlined\" style={{ marginBottom: '20px', position: 'relative' }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <div style={{ position: 'relative', width: '200px', height: '200px', marginBottom: '20px', marginTop: '20px' }}>\r\n              <CircularProgress\r\n                variant=\"determinate\"\r\n                value={(totalCalories / 3000) * 100}\r\n                size={200}\r\n                thickness={2}\r\n                style={{ color: \"#9c27b0\" }}\r\n              />\r\n              <Typography variant=\"h4\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                {totalCalories}\r\n              </Typography>\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }} >Total Protein Value</TableCell>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }} >Total Carbohydrate Value</TableCell>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }}>Total Oil Value</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }}>{totalProtein}</TableCell>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }}>{totalCarbohydrate}</TableCell>\r\n                    <TableCell style={{ color: \"#9c27b0\", fontWeight: \"bold\" }}>{totalOil}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n      {renderProductList}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProducts: state.allProducts.products,\r\n  calorieInfoList: state.calorieInfoList.products\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setProducts,\r\n  setCalorieInfoList,\r\n  createCalorieInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);"],"mappings":"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"},"metadata":{},"sourceType":"module"}