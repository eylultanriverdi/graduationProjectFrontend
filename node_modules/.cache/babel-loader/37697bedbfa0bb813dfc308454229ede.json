{"ast":null,"code":"import { ActionTypes } from \"../contants/action-types\";\nconst fetchProducts = async () => {\n  try {\n    const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n    if (resp && resp.status === 200) {\n      const {\n        pagination,\n        products\n      } = resp.data;\n      const {\n        totalPages\n      } = pagination;\n      const decodedProducts = products.map(product => {\n        const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n        return {\n          ...product,\n          productImage: base64Image\n        };\n      });\n      props.setProducts(decodedProducts);\n    }\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};\nexport const setProducts = products => {\n  return {\n    type: ActionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};","map":{"version":3,"names":["ActionTypes","fetchProducts","resp","axios","get","currentPage","productsPerPage","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","props","setProducts","error","console","log","type","SET_PRODUCTS","payload"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/redux/actions/productActions.js"],"sourcesContent":["import { ActionTypes } from \"../contants/action-types\"\r\n\r\nconst fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n  \r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n  \r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n  \r\n\r\nexport const setProducts = (products) => {\r\n    return {\r\n        type: ActionTypes.SET_PRODUCTS,\r\n        payload: products,\r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,0BAA0B;AAEtD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,uCAAsCC,WAAY,UAASC,eAAgB,EAAC,CAAC;IAC3G,IAAIJ,IAAI,IAAIA,IAAI,CAACK,MAAM,KAAK,GAAG,EAAE;MAC/B,MAAM;QAAEC,UAAU;QAAEC;MAAS,CAAC,GAAGP,IAAI,CAACQ,IAAI;MAC1C,MAAM;QAAEC;MAAW,CAAC,GAAGH,UAAU;MAEjC,MAAMI,eAAe,GAAGH,QAAQ,CAACI,GAAG,CAAEC,OAAO,IAAK;QAChD,MAAMC,WAAW,GAAI,0BAAyBD,OAAO,CAACE,YAAa,EAAC;QACpE,OAAO;UACL,GAAGF,OAAO;UACVE,YAAY,EAAED;QAChB,CAAC;MACH,CAAC,CAAC;MAEFE,KAAK,CAACC,WAAW,CAACN,eAAe,CAAC;IACpC;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;EAC9B;AACF,CAAC;AAGH,OAAO,MAAMD,WAAW,GAAIT,QAAQ,IAAK;EACrC,OAAO;IACHa,IAAI,EAAEtB,WAAW,CAACuB,YAAY;IAC9BC,OAAO,EAAEf;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}