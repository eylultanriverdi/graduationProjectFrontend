{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const productSearch = async searchQuery => {\n    const resp = await axios.get(`http://localhost:3001/productSearch?q=${searchQuery}`);\n    return resp.status === 200 ? resp : false;\n  };\n  const calculateTotalCalories = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        // Toplam kalori değerini hesapla\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          return sum + parseInt(calorieInfo.totalCalorie);\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  useEffect(() => {\n    setTotalCalories(calculateTotalCalories());\n  }, [calorieInfoList]);\n  const handleAddToList = async productId => {\n    const currentDate = new Date().toISOString().slice(0, 10);\n    try {\n      const selectedProduct = allProducts.find(product => product.productId === productId);\n      if (selectedProduct) {\n        const {\n          productId,\n          productName,\n          description,\n          productImage,\n          proteinValue,\n          carbohydrateValue,\n          oilValue,\n          glutenValue,\n          ketogenicDiet,\n          glutenFree,\n          saltFree,\n          calorieValue\n        } = selectedProduct;\n        const resp = await axios.post(`http://localhost:3001/addList`, {\n          calorieListId: \"\",\n          products: [{\n            productId: productId,\n            productName: productName,\n            description: description,\n            productImage: \"\",\n            proteinValue: proteinValue,\n            carbohydrateValue: carbohydrateValue,\n            oilValue: oilValue,\n            glutenValue: glutenValue,\n            ketogenicDiet: ketogenicDiet,\n            glutenFree: glutenFree,\n            saltFree: glutenFree,\n            calorieValue: calorieValue\n          }],\n          totalCalorie: calorieValue,\n          createDate: currentDate\n        });\n        createCalorieInfo(resp.data);\n        setTotalCalories(totalCalories + parseInt(calorieValue));\n      } else {\n        console.log('Product not found');\n      }\n    } catch (error) {\n      console.log('Error:', error.response);\n    }\n  };\n  const handleAddFood = async () => {\n    try {\n      const resp = await productSearch(searchQuery);\n      if (resp && resp.status === 200) {\n        // Başarılı yanıtı işleyin\n      } else {\n        // Yanıtta hata olduğunu işleyin\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const renderProductList = calorieInfoList && calorieInfoList.map(calorieInfo => {\n    const {\n      products\n    } = calorieInfo;\n    return products && products.map(product => {\n      const {\n        productId,\n        productName,\n        description,\n        productImage,\n        carbohydrateValue,\n        glutenFree,\n        glutenValue,\n        ketogenicDiet,\n        oilValue,\n        proteinValue,\n        saltFree,\n        calorieValue\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: {\n          marginTop: '50px',\n          marginBottom: '80px',\n          padding: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              style: {\n                marginBottom: '10px'\n              },\n              children: productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Protein: \", proteinValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Hidrat: \", carbohydrateValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ya\\u011F: \", oilValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten De\\u011Feri: \", glutenValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten Free: \", glutenFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ketogenic Diet: \", ketogenicDiet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Salt Free: \", saltFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Kalori De\\u011Feri: \", calorieValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            style: {\n              textAlign: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: productImage,\n              alt: productName,\n              style: {\n                width: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => handleAddToList(productId),\n              style: {\n                marginTop: '20px'\n              },\n              children: \"Sepete Ekle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this);\n    });\n  });\n  const renderPagination = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(allProducts.length / productsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: number === currentPage ? 'primary' : 'default',\n        onClick: () => setCurrentPage(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h1\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"G\\xFCnl\\xFCk Kalori Hesaplama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\xDCr\\xFCn Ara\",\n      variant: \"outlined\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAddFood,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"\\xDCr\\xFCn Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), allProducts.length === 0 ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderProductList, renderPagination]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      style: {\n        marginTop: '50px'\n      },\n      children: [\"G\\xFCnl\\xFCk Toplam Kalori: \", totalCalories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"eDtq2R1TrXXQnWFvtg4MSvbYAjk=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => {\n  return {\n    allProducts: state.allProducts.products,\n    calorieInfoList: state.calorieInfoList.products\n  };\n};\nconst mapDispatchToProps = {\n  createCalorieInfo,\n  setCalorieInfoList,\n  setProducts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","searchQuery","setSearchQuery","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","productSearch","calculateTotalCalories","total","currentDate","Date","toISOString","split","length","productsWithSameDate","filter","calorieInfo","entryDate","createDate","reduce","sum","parseInt","totalCalorie","fetchCalorieInfoList","handleAddToList","productId","slice","selectedProduct","find","productName","description","proteinValue","carbohydrateValue","oilValue","glutenValue","ketogenicDiet","glutenFree","saltFree","calorieValue","post","calorieListId","response","handleAddFood","renderProductList","elevation","style","marginTop","marginBottom","padding","position","children","container","spacing","item","xs","sm","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","src","alt","width","color","onClick","renderPagination","pageNumbers","i","Math","ceil","push","number","label","value","onChange","e","target","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const productSearch = async (searchQuery) => {\r\n    const resp = await axios.get(\r\n      `http://localhost:3001/productSearch?q=${searchQuery}`,\r\n    );\r\n    return resp.status === 200 ? resp : false;\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        // Toplam kalori değerini hesapla\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.totalCalorie);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalCalories(calculateTotalCalories());\r\n  }, [calorieInfoList]);\r\n\r\n  const handleAddToList = async (productId) => {\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n\r\n    try {\r\n      const selectedProduct = allProducts.find((product) => product.productId === productId);\r\n\r\n      if (selectedProduct) {\r\n        const {\r\n          productId,\r\n          productName,\r\n          description,\r\n          productImage,\r\n          proteinValue,\r\n          carbohydrateValue,\r\n          oilValue,\r\n          glutenValue,\r\n          ketogenicDiet,\r\n          glutenFree,\r\n          saltFree,\r\n          calorieValue\r\n        } = selectedProduct;\r\n\r\n        const resp = await axios.post(`http://localhost:3001/addList`, {\r\n          calorieListId: \"\",\r\n          products: [\r\n            {\r\n              productId: productId,\r\n              productName: productName,\r\n              description: description,\r\n              productImage: \"\",\r\n              proteinValue: proteinValue,\r\n              carbohydrateValue: carbohydrateValue,\r\n              oilValue: oilValue,\r\n              glutenValue: glutenValue,\r\n              ketogenicDiet: ketogenicDiet,\r\n              glutenFree: glutenFree,\r\n              saltFree: glutenFree,\r\n              calorieValue: calorieValue\r\n            }\r\n          ],\r\n          totalCalorie: calorieValue,\r\n          createDate: currentDate\r\n        });\r\n\r\n        createCalorieInfo(resp.data);\r\n        setTotalCalories(totalCalories + parseInt(calorieValue));\r\n      } else {\r\n        console.log('Product not found');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error.response);\r\n    }\r\n  };\r\n\r\n  const handleAddFood = async () => {\r\n    try {\r\n      const resp = await productSearch(searchQuery);\r\n\r\n      if (resp && resp.status === 200) {\r\n        // Başarılı yanıtı işleyin\r\n      } else {\r\n        // Yanıtta hata olduğunu işleyin\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const renderProductList = calorieInfoList && calorieInfoList.map((calorieInfo) => {\r\n    const { products } = calorieInfo;\r\n\r\n    return products && products.map((product) => {\r\n      const {\r\n        productId,\r\n        productName,\r\n        description,\r\n        productImage,\r\n        carbohydrateValue,\r\n        glutenFree,\r\n        glutenValue,\r\n        ketogenicDiet,\r\n        oilValue,\r\n        proteinValue,\r\n        saltFree,\r\n        calorieValue\r\n      } = product;\r\n\r\n      return (\r\n        <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px' }}>\r\n                {productName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                {description}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Protein: {proteinValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Hidrat: {carbohydrateValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Yağ: {oilValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Değeri: {glutenValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Free: {glutenFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Ketogenic Diet: {ketogenicDiet}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Salt Free: {saltFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Kalori Değeri: {calorieValue}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} style={{ textAlign: 'right' }}>\r\n              <img src={productImage} alt={productName} style={{ width: '200px' }} />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => handleAddToList(productId)}\r\n                style={{ marginTop: '20px' }}\r\n              >\r\n                Sepete Ekle\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    });\r\n  });\r\n\r\n  const renderPagination = () => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(allProducts.length / productsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: '20px' }}>\r\n        {pageNumbers.map((number) => (\r\n          <Button\r\n            key={number}\r\n            variant=\"contained\"\r\n            color={number === currentPage ? 'primary' : 'default'}\r\n            onClick={() => setCurrentPage(number)}\r\n          >\r\n            {number}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" component=\"h1\" style={{ marginBottom: '20px' }}>\r\n        Günlük Kalori Hesaplama\r\n      </Typography>\r\n      <TextField\r\n        label=\"Ürün Ara\"\r\n        variant=\"outlined\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        style={{ marginBottom: '20px' }}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddFood} style={{ marginBottom: '20px' }}>\r\n        Ürün Ekle\r\n      </Button>\r\n      {allProducts.length === 0 ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          {renderProductList}\r\n          {renderPagination}\r\n        </>\r\n      )}\r\n      <Typography variant=\"h5\" component=\"h2\" style={{ marginTop: '50px' }}>\r\n        Günlük Toplam Kalori: {totalCalories}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allProducts: state.allProducts.products,\r\n    calorieInfoList: state.calorieInfoList.products\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createCalorieInfo,\r\n  setCalorieInfoList,\r\n  setProducts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}