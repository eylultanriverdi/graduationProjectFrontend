{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    let totalCalories = 0;\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => calorieInfo.createDate === currentDate);\n\n      // Toplam kalori değerini hesapla\n      if (productsWithSameDate.length > 0) {\n        totalCalories = productsWithSameDate.reduce((total, calorieInfo) => total + parseInt(calorieInfo.totalCalorie), 0);\n      }\n    }\n    return totalCalories.toString();\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  const handleAddToList = async productId => {\n    const currentDate = new Date().toISOString().slice(0, 10);\n    try {\n      const selectedProduct = allProducts.find(product => product.productId === productId);\n      console.log(selectedProduct, \"selectedProduct\");\n      if (selectedProduct) {\n        const {\n          productId,\n          productName,\n          description,\n          productImage,\n          proteinValue,\n          carbohydrateValue,\n          oilValue,\n          glutenValue,\n          ketogenicDiet,\n          glutenFree,\n          saltFree,\n          calorieValue\n        } = selectedProduct;\n        const resp = await axios.post(`http://localhost:3001/addList`, {\n          calorieListId: \"\",\n          products: [{\n            productId: productId,\n            productName: productName,\n            description: description,\n            productImage: \"\",\n            proteinValue: proteinValue,\n            carbohydrateValue: carbohydrateValue,\n            oilValue: oilValue,\n            glutenValue: glutenValue,\n            ketogenicDiet: ketogenicDiet,\n            glutenFree: glutenFree,\n            saltFree: glutenFree,\n            calorieValue: calorieValue\n          }],\n          totalCalorie: calorieValue,\n          createDate: currentDate\n        });\n        createCalorieInfo(resp.data);\n\n        // Yeni bir \"calorieInfo\" nesnesi eklendiğinde, güncel \"calorieInfoList\"i yeniden getir\n        fetchCalorieInfoList();\n      } else {\n        console.log('Product not found');\n      }\n    } catch (error) {\n      console.log('Error:', error.response);\n    }\n  };\n  const renderProductList = calorieInfoList && calorieInfoList.map(calorieInfo => {\n    const {\n      products\n    } = calorieInfo;\n    return products && products.map(product => {\n      const {\n        productId,\n        productName,\n        description,\n        productImage,\n        carbohydrateValue,\n        glutenFree,\n        glutenValue,\n        ketogenicDiet,\n        oilValue,\n        proteinValue,\n        saltFree,\n        calorieValue\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: {\n          marginTop: '50px',\n          marginBottom: '80px',\n          padding: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: productImage,\n              alt: description,\n              align: \"center\",\n              style: {\n                width: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              style: {\n                marginBottom: '10px'\n              },\n              children: productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Protein: \", proteinValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Hidrat: \", carbohydrateValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ya\\u011F: \", oilValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten De\\u011Feri: \", glutenValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten Free: \", glutenFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ketogenic Diet: \", ketogenicDiet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Salt Free: \", saltFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              children: [\"Kalori: \", calorieValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"small\",\n              style: {\n                position: 'absolute',\n                bottom: '10px',\n                right: '10px'\n              },\n              onClick: () => handleAddToList(productId),\n              children: \"Bug\\xFCn\\xFCn Listesine Ekle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderProductList, /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"p\",\n      style: {\n        marginTop: '50px'\n      },\n      children: [\"Bug\\xFCnki Toplam Kalori: \", calculateTotalCalories()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Geri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setCurrentPage(currentPage + 1),\n        style: {\n          marginLeft: '10px'\n        },\n        disabled: currentPage === totalPages,\n        children: \"\\u0130leri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"IJ6dqiuCsDwfvUokclvQCoVAP10=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => {\n  return {\n    allProducts: state.products.allProducts,\n    calorieInfoList: state.products.calorieInfoList\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCalorieInfo: calorieInfo => dispatch(createCalorieInfo(calorieInfo)),\n    setCalorieInfoList: calorieInfoList => dispatch(setCalorieInfoList(calorieInfoList)),\n    setProducts: products => dispatch(setProducts(products))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","TextField","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","totalCalories","length","currentDate","Date","toISOString","split","productsWithSameDate","filter","calorieInfo","createDate","reduce","total","parseInt","totalCalorie","toString","fetchCalorieInfoList","handleAddToList","productId","slice","selectedProduct","find","productName","description","proteinValue","carbohydrateValue","oilValue","glutenValue","ketogenicDiet","glutenFree","saltFree","calorieValue","post","calorieListId","response","renderProductList","elevation","style","marginTop","marginBottom","padding","position","children","container","spacing","item","xs","sm","src","alt","align","width","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","color","size","bottom","right","onClick","disabled","marginLeft","_c","mapStateToProps","state","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let totalCalories = 0;\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => calorieInfo.createDate === currentDate);\r\n\r\n      // Toplam kalori değerini hesapla\r\n      if (productsWithSameDate.length > 0) {\r\n        totalCalories = productsWithSameDate.reduce(\r\n          (total, calorieInfo) => total + parseInt(calorieInfo.totalCalorie),\r\n          0\r\n        );\r\n      }\r\n    }\r\n\r\n    return totalCalories.toString();\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  const handleAddToList = async (productId) => {\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n\r\n    try {\r\n      const selectedProduct = allProducts.find((product) => product.productId === productId);\r\n      console.log(selectedProduct, \"selectedProduct\")\r\n      if (selectedProduct) {\r\n        const {\r\n          productId,\r\n          productName,\r\n          description,\r\n          productImage,\r\n          proteinValue,\r\n          carbohydrateValue,\r\n          oilValue,\r\n          glutenValue,\r\n          ketogenicDiet,\r\n          glutenFree,\r\n          saltFree,\r\n          calorieValue\r\n        } = selectedProduct;\r\n\r\n        const resp = await axios.post(`http://localhost:3001/addList`, {\r\n          calorieListId: \"\",\r\n          products: [\r\n            {\r\n              productId: productId,\r\n              productName: productName,\r\n              description: description,\r\n              productImage: \"\",\r\n              proteinValue: proteinValue,\r\n              carbohydrateValue: carbohydrateValue,\r\n              oilValue: oilValue,\r\n              glutenValue: glutenValue,\r\n              ketogenicDiet: ketogenicDiet,\r\n              glutenFree: glutenFree,\r\n              saltFree: glutenFree,\r\n              calorieValue: calorieValue\r\n            }\r\n          ],\r\n          totalCalorie: calorieValue,\r\n          createDate: currentDate\r\n        });\r\n        createCalorieInfo(resp.data);\r\n\r\n        // Yeni bir \"calorieInfo\" nesnesi eklendiğinde, güncel \"calorieInfoList\"i yeniden getir\r\n        fetchCalorieInfoList();\r\n      } else {\r\n        console.log('Product not found');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error.response);\r\n    }\r\n  };\r\n\r\n  const renderProductList = calorieInfoList && calorieInfoList.map((calorieInfo) => {\r\n    const { products } = calorieInfo;\r\n\r\n    return products && products.map((product) => {\r\n      const {\r\n        productId,\r\n        productName,\r\n        description,\r\n        productImage,\r\n        carbohydrateValue,\r\n        glutenFree,\r\n        glutenValue,\r\n        ketogenicDiet,\r\n        oilValue,\r\n        proteinValue,\r\n        saltFree,\r\n        calorieValue\r\n      } = product;\r\n\r\n      return (\r\n        <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n          <Grid container spacing={2}>\r\n            {/* Ürün görseli */}\r\n            <Grid item xs={12} sm={4}>\r\n              <img\r\n                src={productImage}\r\n                alt={description}\r\n                align=\"center\"\r\n                style={{ width: '100%', height: 'auto' }}\r\n              />\r\n            </Grid>\r\n            {/* Ürün bilgileri */}\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px' }}>\r\n                {productName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                {description}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Protein: {proteinValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Hidrat: {carbohydrateValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Yağ: {oilValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Değeri: {glutenValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Free: {glutenFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Ketogenic Diet: {ketogenicDiet}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Salt Free: {saltFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\">\r\n                Kalori: {calorieValue}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                style={{ position: 'absolute', bottom: '10px', right: '10px' }}\r\n                onClick={() => handleAddToList(productId)}\r\n              >\r\n                Bugünün Listesine Ekle\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Ürün listesi */}\r\n      {renderProductList}\r\n\r\n      {/* Toplam kalori değeri */}\r\n      <Typography variant=\"h6\" component=\"p\" style={{ marginTop: '50px' }}>\r\n        Bugünki Toplam Kalori: {calculateTotalCalories()}\r\n      </Typography>\r\n\r\n      {/* Sayfalama düğmeleri */}\r\n      <div style={{ marginTop: '50px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setCurrentPage(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Geri\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setCurrentPage(currentPage + 1)}\r\n          style={{ marginLeft: '10px' }}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          İleri\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allProducts: state.products.allProducts,\r\n    calorieInfoList: state.products.calorieInfoList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCalorieInfo: (calorieInfo) => dispatch(createCalorieInfo(calorieInfo)),\r\n    setCalorieInfoList: (calorieInfoList) => dispatch(setCalorieInfoList(calorieInfoList)),\r\n    setProducts: (products) => dispatch(setProducts(products))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}