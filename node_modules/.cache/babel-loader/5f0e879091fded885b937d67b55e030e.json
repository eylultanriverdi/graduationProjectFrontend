{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n  const [totalCalories, setTotalCalories] = useState(0); // Toplam kalori değeri\n\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    let totalCalories = 0;\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => calorieInfo.createDate === currentDate);\n\n      // Toplam kalori değerini hesapla\n      if (productsWithSameDate.length > 0) {\n        totalCalories = productsWithSameDate.reduce((total, calorieInfo) => total + parseInt(calorieInfo.totalCalorie), 0);\n      }\n    }\n    return totalCalories.toString();\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  const handleAddToList = async productId => {\n    const currentDate = new Date().toISOString().slice(0, 10);\n    try {\n      const selectedProduct = allProducts.find(product => product.productId === productId);\n      if (selectedProduct) {\n        const {\n          productId,\n          productName,\n          description,\n          productImage,\n          proteinValue,\n          carbohydrateValue,\n          oilValue,\n          glutenValue,\n          ketogenicDiet,\n          glutenFree,\n          saltFree,\n          calorieValue\n        } = selectedProduct;\n        const resp = await axios.post(`http://localhost:3001/addList`, {\n          calorieListId: \"\",\n          products: [{\n            productId: productId,\n            productName: productName,\n            description: description,\n            productImage: \"\",\n            proteinValue: proteinValue,\n            carbohydrateValue: carbohydrateValue,\n            oilValue: oilValue,\n            glutenValue: glutenValue,\n            ketogenicDiet: ketogenicDiet,\n            glutenFree: glutenFree,\n            saltFree: glutenFree,\n            calorieValue: calorieValue\n          }],\n          totalCalorie: calorieValue,\n          createDate: currentDate\n        });\n        createCalorieInfo(resp.data);\n\n        // Yeni ürün eklendiğinde toplam kalori değerini güncelle\n        setTotalCalories(totalCalories + parseInt(calorieValue));\n      } else {\n        console.log('Product not found');\n      }\n    } catch (error) {\n      console.log('Error:', error.response);\n    }\n  };\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n  const renderProducts = () => {\n    return allProducts.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: product.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.productImage,\n          alt: product.productName,\n          style: {\n            width: '100%',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleAddToList(product.productId),\n          children: \"Listeye Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, product.productId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"\\xDCr\\xFCnler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: renderProducts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: '200px',\n            height: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            variant: \"determinate\",\n            value: totalCalories / 3000 * 100,\n            size: 200,\n            thickness: 2,\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)'\n            },\n            children: calculateTotalCalories()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"pE/Bpwp0fheruQL2Qtmf83wO+oY=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => {\n  return {\n    allProducts: state.productReducer.products,\n    calorieInfoList: state.productReducer.calorieInfoList\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCalorieInfo: calorieInfo => dispatch(createCalorieInfo(calorieInfo)),\n    setCalorieInfoList: calorieInfoList => dispatch(setCalorieInfoList(calorieInfoList)),\n    setProducts: products => dispatch(setProducts(products))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","TextField","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","length","currentDate","Date","toISOString","split","productsWithSameDate","filter","calorieInfo","createDate","reduce","total","parseInt","totalCalorie","toString","fetchCalorieInfoList","handleAddToList","productId","slice","selectedProduct","find","productName","description","proteinValue","carbohydrateValue","oilValue","glutenValue","ketogenicDiet","glutenFree","saltFree","calorieValue","post","calorieListId","response","handlePageChange","event","value","renderProducts","item","xs","sm","md","children","elevation","style","padding","marginBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","color","onClick","container","spacing","display","justifyContent","alignItems","flexDirection","position","height","size","thickness","top","left","transform","_c","mapStateToProps","state","productReducer","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n  const [totalCalories, setTotalCalories] = useState(0); // Toplam kalori değeri\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let totalCalories = 0;\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => calorieInfo.createDate === currentDate);\r\n\r\n      // Toplam kalori değerini hesapla\r\n      if (productsWithSameDate.length > 0) {\r\n        totalCalories = productsWithSameDate.reduce(\r\n          (total, calorieInfo) => total + parseInt(calorieInfo.totalCalorie),\r\n          0\r\n        );\r\n      }\r\n    }\r\n\r\n    return totalCalories.toString();\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  const handleAddToList = async (productId) => {\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n\r\n    try {\r\n      const selectedProduct = allProducts.find((product) => product.productId === productId);\r\n      if (selectedProduct) {\r\n        const {\r\n          productId,\r\n          productName,\r\n          description,\r\n          productImage,\r\n          proteinValue,\r\n          carbohydrateValue,\r\n          oilValue,\r\n          glutenValue,\r\n          ketogenicDiet,\r\n          glutenFree,\r\n          saltFree,\r\n          calorieValue\r\n        } = selectedProduct;\r\n\r\n        const resp = await axios.post(`http://localhost:3001/addList`, {\r\n          calorieListId: \"\",\r\n          products: [\r\n            {\r\n              productId: productId,\r\n              productName: productName,\r\n              description: description,\r\n              productImage: \"\",\r\n              proteinValue: proteinValue,\r\n              carbohydrateValue: carbohydrateValue,\r\n              oilValue: oilValue,\r\n              glutenValue: glutenValue,\r\n              ketogenicDiet: ketogenicDiet,\r\n              glutenFree: glutenFree,\r\n              saltFree: glutenFree,\r\n              calorieValue: calorieValue\r\n            }\r\n          ],\r\n          totalCalorie: calorieValue,\r\n          createDate: currentDate\r\n        });\r\n\r\n        createCalorieInfo(resp.data);\r\n\r\n        // Yeni ürün eklendiğinde toplam kalori değerini güncelle\r\n        setTotalCalories(totalCalories + parseInt(calorieValue));\r\n      } else {\r\n        console.log('Product not found');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error.response);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return allProducts.map((product) => (\r\n      <Grid item xs={12} sm={6} md={4} key={product.productId}>\r\n        <Paper elevation={3} style={{ padding: '20px', marginBottom: '20px' }}>\r\n          <Typography variant=\"h5\">{product.productName}</Typography>\r\n          <Typography variant=\"body2\" style={{ marginBottom: '10px' }}>\r\n            {product.description}\r\n          </Typography>\r\n          <img src={product.productImage} alt={product.productName} style={{ width: '100%', marginBottom: '10px' }} />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddToList(product.productId)}>\r\n            Listeye Ekle\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" style={{ marginBottom: '20px' }}>\r\n        Ürünler\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        {renderProducts()}\r\n      </Grid>\r\n      <div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n          <div style={{ position: 'relative', width: '200px', height: '200px' }}>\r\n            <CircularProgress\r\n              variant=\"determinate\"\r\n              value={(totalCalories / 3000) * 100}\r\n              size={200}\r\n              thickness={2}\r\n              color=\"secondary\"\r\n            />\r\n            <Typography variant=\"h4\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n              {calculateTotalCalories()}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* ... diğer JSX kodları ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allProducts: state.productReducer.products,\r\n    calorieInfoList: state.productReducer.calorieInfoList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCalorieInfo: (calorieInfo) => dispatch(createCalorieInfo(calorieInfo)),\r\n    setCalorieInfoList: (calorieInfoList) => dispatch(setCalorieInfoList(calorieInfoList)),\r\n    setProducts: (products) => dispatch(setProducts(products))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}