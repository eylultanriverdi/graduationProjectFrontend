{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CreateRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@mui/material/Grid';\nimport { Paper, TextField, Typography, Button } from '@mui/material';\nimport { createRecipe } from '../redux/actions/productActions';\nimport cooking2 from '../assets/cooking2.jpg';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateRecipe = props => {\n  _s();\n  const {\n    createRecipe\n  } = props;\n  const paperStyle = {\n    padding: 20,\n    margin: '120px auto',\n    width: '100%',\n    height: '100%'\n  };\n  const buttonStyle = {\n    margin: '8px 0',\n    fontSize: '25px'\n  };\n  const textFieldStyle = {\n    marginBottom: '20px',\n    marginTop: '10px'\n  };\n  const [recipeID, setRecipeID] = useState('');\n  const [recipeName, setRecipeName] = useState('');\n  const [recipeDetail, setRecipeDetail] = useState('');\n  const isFormCompleted = recipeID && recipeName && recipeDetail;\n  const fetchCreateRecipe = async () => {\n    try {\n      const resp = await axios.post('http://localhost:3001/addRecipe', {\n        recipeID: recipeID,\n        recipeName: recipeName,\n        recipeDetail: recipeDetail\n      });\n      createRecipe(resp.data);\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCreateRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    style: {\n      width: '100%',\n      align: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cooking2,\n          alt: \"Cooking\",\n          style: {\n            marginBottom: '10px',\n            width: \"-webkit-fill-available\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        align: \"center\",\n        style: {\n          color: '#9c27b0'\n        },\n        children: \"Let's create a recipe.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              color: '#9c27b0'\n            },\n            children: \"Recipe Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Recipe Name\",\n            placeholder: \"Enter recipe name\",\n            fullWidth: true,\n            required: true,\n            style: textFieldStyle,\n            color: \"secondary\",\n            value: recipeName,\n            onChange: e => setRecipeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Recipe Detail\",\n            placeholder: \"Enter recipe detail\",\n            fullWidth: true,\n            required: true,\n            style: textFieldStyle,\n            color: \"secondary\",\n            value: recipeDetail,\n            onChange: e => setRecipeDetail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"secondary\",\n          variant: \"contained\",\n          fullWidth: true,\n          style: buttonStyle,\n          onClick: fetchCreateRecipe,\n          children: \"Create Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateRecipe, \"kWlJxcgeZu5yS1fGI8e4F4Rv3t0=\");\n_c = CreateRecipe;\nconst mapDispatchToProps = dispatch => {\n  return {\n    createRecipe: recipe => dispatch(createRecipe(recipe))\n  };\n};\nexport default connect(null, mapDispatchToProps)(CreateRecipe);\nvar _c;\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"names":["React","useEffect","useState","connect","Grid","Paper","TextField","Typography","Button","createRecipe","cooking2","axios","jsxDEV","_jsxDEV","CreateRecipe","props","_s","paperStyle","padding","margin","width","height","buttonStyle","fontSize","textFieldStyle","marginBottom","marginTop","recipeID","setRecipeID","recipeName","setRecipeName","recipeDetail","setRecipeDetail","isFormCompleted","fetchCreateRecipe","resp","post","data","error","console","log","container","justifyContent","style","align","children","elevation","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","color","direction","spacing","item","xs","variant","label","placeholder","fullWidth","required","value","onChange","e","target","type","onClick","_c","mapDispatchToProps","dispatch","recipe","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CreateRecipe.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Paper, TextField, Typography, Button } from '@mui/material';\r\nimport { createRecipe } from '../redux/actions/productActions';\r\nimport cooking2 from '../assets/cooking2.jpg';\r\nimport axios from 'axios';\r\n\r\nconst CreateRecipe = (props) => {\r\n    const { createRecipe } = props;\r\n    const paperStyle = {\r\n        padding: 20,\r\n        margin: '120px auto',\r\n        width: '100%',\r\n        height: '100%',\r\n    };\r\n    const buttonStyle = { margin: '8px 0', fontSize: '25px' };\r\n    const textFieldStyle = { marginBottom: '20px', marginTop: '10px' };\r\n\r\n    const [recipeID, setRecipeID] = useState('');\r\n    const [recipeName, setRecipeName] = useState('');\r\n    const [recipeDetail, setRecipeDetail] = useState('');\r\n\r\n    const isFormCompleted =\r\n        recipeID &&\r\n        recipeName &&\r\n        recipeDetail\r\n\r\n    const fetchCreateRecipe = async () => {\r\n        try {\r\n            const resp = await axios.post('http://localhost:3001/addRecipe', {\r\n                recipeID: recipeID,\r\n                recipeName: recipeName,\r\n                recipeDetail: recipeDetail\r\n            });\r\n\r\n            createRecipe(resp.data);\r\n        } catch (error) {\r\n            console.log('Error:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCreateRecipe();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" style={{width: '100%', align: \"center\"}}>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <img\r\n                        src={cooking2}\r\n                        alt=\"Cooking\"\r\n                        style={{ marginBottom: '10px', width: \"-webkit-fill-available\" }}\r\n                    />\r\n                </Grid>\r\n                <h2 align=\"center\" style={{ color: '#9c27b0' }}>Let's create a recipe.</h2>\r\n                <Grid container direction=\"row\" spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" style={{ color: '#9c27b0' }}>Recipe Information</Typography>\r\n                        <TextField\r\n                            label=\"Recipe Name\"\r\n                            placeholder=\"Enter recipe name\"\r\n                            fullWidth\r\n                            required\r\n                            style={textFieldStyle}\r\n                            color=\"secondary\"\r\n                            value={recipeName}\r\n                            onChange={(e) => setRecipeName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            label=\"Recipe Detail\"\r\n                            placeholder=\"Enter recipe detail\"\r\n                            fullWidth\r\n                            required\r\n                            style={textFieldStyle}\r\n                            color=\"secondary\"\r\n                            value={recipeDetail}\r\n                            onChange={(e) => setRecipeDetail(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        style={buttonStyle}\r\n                        onClick={fetchCreateRecipe}\r\n                    >\r\n                        Create Recipe\r\n                    </Button>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createRecipe: (recipe) => dispatch(createRecipe(recipe)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateRecipe);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}