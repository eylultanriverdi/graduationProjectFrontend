{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, Button } from '@mui/material';\nimport Pagination from '@mui/lab/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    let totalCalories = 0;\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(product => product.createDate === currentDate);\n\n      // Toplam kalori değerini hesapla\n      if (productsWithSameDate.length > 0) {\n        totalCalories = productsWithSameDate.reduce((total, product) => total + parseInt(product.totalCalorie), 0);\n      }\n    }\n    return totalCalories.toString();\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n  const handleAddToList = productId => {\n    // Ekleme işlemi burada yapılacak\n    console.log('Ekleme işlemi:', productId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#9c27b0'\n      },\n      children: \"Calorie Info Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: '200px',\n            height: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            variant: \"determinate\",\n            value: parseInt(calculateTotalCalories()) / 3000 * 100,\n            size: 200,\n            thickness: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)'\n            },\n            children: calculateTotalCalories()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: \"Product List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), allProducts && allProducts.map(product => {\n          const {\n            productId,\n            productName,\n            description,\n            productImage,\n            carbohydrateValue,\n            glutenFree,\n            glutenValue,\n            ketogenicDiet,\n            oilValue,\n            proteinValue,\n            saltFree,\n            calorieValue\n          } = product;\n          return /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 10,\n            style: {\n              marginTop: '50px',\n              marginBottom: '80px',\n              padding: '20px',\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: productImage,\n                  alt: description,\n                  align: \"center\",\n                  style: {\n                    width: '100%',\n                    height: 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 8,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  component: \"h2\",\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Protein: \", proteinValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Hidrat: \", carbohydrateValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Ya\\u011F: \", oilValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Gluten De\\u011Feri: \", glutenValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Gluten Free: \", glutenFree]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Ketogenic Diet: \", ketogenicDiet]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  style: {\n                    marginBottom: '5px'\n                  },\n                  children: [\"Salt Free: \", saltFree]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  children: [\"Kalori: \", calorieValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  size: \"small\",\n                  style: {\n                    position: 'absolute',\n                    bottom: '10px',\n                    right: '10px'\n                  },\n                  onClick: () => handleAddToList(productId),\n                  children: \"Bug\\xFCn\\xFCn Listesine Ekle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"IJ6dqiuCsDwfvUokclvQCoVAP10=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => ({\n  allProducts: state.allProducts.products,\n  calorieInfoList: state.calorieInfoList.products\n});\nconst mapDispatchToProps = {\n  setProducts,\n  setCalorieInfoList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","Button","Pagination","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","totalCalories","length","currentDate","Date","toISOString","split","productsWithSameDate","filter","createDate","reduce","total","parseInt","totalCalorie","toString","fetchCalorieInfoList","indexOfLastProduct","handlePageChange","event","page","handleAddToList","productId","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","flexDirection","position","width","height","variant","value","size","thickness","top","left","transform","marginTop","marginBottom","productName","description","carbohydrateValue","glutenFree","glutenValue","ketogenicDiet","oilValue","proteinValue","saltFree","calorieValue","elevation","padding","container","spacing","item","xs","sm","src","alt","align","component","bottom","right","onClick","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, Button } from '@mui/material';\r\nimport Pagination from '@mui/lab/Pagination';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    let totalCalories = 0;\r\n  \r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n  \r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((product) => product.createDate === currentDate);\r\n  \r\n      // Toplam kalori değerini hesapla\r\n      if (productsWithSameDate.length > 0) {\r\n        totalCalories = productsWithSameDate.reduce(\r\n          (total, product) => total + parseInt(product.totalCalorie),\r\n          0\r\n        );\r\n      }\r\n    }\r\n  \r\n    return totalCalories.toString();\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleAddToList = (productId) => {\r\n    // Ekleme işlemi burada yapılacak\r\n    console.log('Ekleme işlemi:', productId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: '#9c27b0' }}>Calorie Info Page</h1>\r\n      <div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n          <div style={{ position: 'relative', width: '200px', height: '200px' }}>\r\n            <CircularProgress\r\n              variant=\"determinate\"\r\n              value={(parseInt(calculateTotalCalories()) / 3000) * 100}\r\n              size={200}\r\n              thickness={2}\r\n            />\r\n            <Typography variant=\"h4\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n              {calculateTotalCalories()}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: '20px' }}>\r\n          <Typography variant=\"h6\" style={{ marginBottom: '10px' }}>\r\n            Product List\r\n          </Typography>\r\n          {allProducts && allProducts.map((product) => {\r\n            const { productId, productName, description, productImage, carbohydrateValue, glutenFree, glutenValue, ketogenicDiet, oilValue, proteinValue, saltFree, calorieValue } = product;\r\n\r\n            return (\r\n              <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <img\r\n                      src={productImage}\r\n                      alt={description}\r\n                      align=\"center\"\r\n                      style={{ width: '100%', height: 'auto' }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={8}>\r\n                    <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px' }}>\r\n                      {productName}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      {description}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Protein: {proteinValue}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Hidrat: {carbohydrateValue}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Yağ: {oilValue}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Gluten Değeri: {glutenValue}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Gluten Free: {glutenFree}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Ketogenic Diet: {ketogenicDiet}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                      Salt Free: {saltFree}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                      Kalori: {calorieValue}\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      style={{ position: 'absolute', bottom: '10px', right: '10px' }}\r\n                      onClick={() => handleAddToList(productId)}\r\n                    >\r\n                      Bugünün Listesine Ekle\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProducts: state.allProducts.products,\r\n  calorieInfoList: state.calorieInfoList.products\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setProducts,\r\n  setCalorieInfoList\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}