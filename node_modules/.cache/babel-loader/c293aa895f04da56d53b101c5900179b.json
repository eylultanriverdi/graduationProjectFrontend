{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const calculateTotalCalories = () => {\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      // İlgili tarih bilgisini alın\n      const currentDate = calorieInfoList[0].createDate; // Diyelim ki createDate formatı \"YYYY-MM-DD\"\n\n      // Aynı tarihte eklenen ürünleri filtrele\n      const sameDateProducts = calorieInfoList.filter(product => product.createDate === currentDate);\n\n      // Toplam kalori değerini hesapla\n      const totalCalories = sameDateProducts.reduce((total, product) => total + product.calorieValue, 0);\n      return totalCalories;\n    }\n    return 0; // Eğer calorieInfoList boşsa veya undefined ise 0 döndür\n  };\n\n  const fetchCalorieInfoList = async () => {\n    // Ekledim\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList(); // Ekledim\n  }, []);\n\n  // Şu anki sayfadaki ürünleri al\n  const indexOfLastProduct = currentPage * productsPerPage;\n\n  // Sayfa değişikliğini işle\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#9c27b0'\n      },\n      children: \"Calorie Info Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Calories: \", calculateTotalCalories()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"IJ6dqiuCsDwfvUokclvQCoVAP10=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => ({\n  allProducts: state.allProducts.products,\n  calorieInfoList: state.calorieInfo.products // Ekledim\n});\n\nconst mapDispatchToProps = {\n  setProducts,\n  setCalorieInfoList // Ekledim\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","setCalorieInfoList","setProducts","axios","Pagination","Stack","jsxDEV","_jsxDEV","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","calculateTotalCalories","length","currentDate","createDate","sameDateProducts","filter","totalCalories","reduce","total","calorieValue","fetchCalorieInfoList","indexOfLastProduct","handlePageChange","event","page","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","calorieInfo","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const calculateTotalCalories = () => {\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisini alın\r\n      const currentDate = calorieInfoList[0].createDate; // Diyelim ki createDate formatı \"YYYY-MM-DD\"\r\n  \r\n      // Aynı tarihte eklenen ürünleri filtrele\r\n      const sameDateProducts = calorieInfoList.filter(\r\n        (product) => product.createDate === currentDate\r\n      );\r\n  \r\n      // Toplam kalori değerini hesapla\r\n      const totalCalories = sameDateProducts.reduce(\r\n        (total, product) => total + product.calorieValue,\r\n        0\r\n      );\r\n  \r\n      return totalCalories;\r\n    }\r\n  \r\n    return 0; // Eğer calorieInfoList boşsa veya undefined ise 0 döndür\r\n  };\r\n  \r\n  \r\n\r\n  const fetchCalorieInfoList = async () => { // Ekledim\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList(); // Ekledim\r\n  }, []);\r\n\r\n  // Şu anki sayfadaki ürünleri al\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n\r\n  // Sayfa değişikliğini işle\r\n  const handlePageChange = (event, page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: '#9c27b0' }}>Calorie Info Page</h1>\r\n      <div>\r\n        <h2>Total Calories: {calculateTotalCalories()}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProducts: state.allProducts.products,\r\n  calorieInfoList: state.calorieInfo.products // Ekledim\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setProducts,\r\n  setCalorieInfoList // Ekledim\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}