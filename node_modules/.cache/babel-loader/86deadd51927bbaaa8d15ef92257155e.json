{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\n\nvar _span;\n\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [// Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultOpen,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]); // Resize menu on `defaultOpen` automatic toggle.\n\n  React.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      displayRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [displayNode, autoWidth]); // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on macOS, but it's recommended by\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && openState;\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n\n          if (index < displayMultiple.length - 1) {\n            output.push(', ');\n          }\n\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = anchorElement.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(SelectDisplayProps.className, classes.select, className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      })) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: anchorElement,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["/home/eylul/Desktop/BitirmeProjesi/my-react-app/node_modules/@mui/material/Select/SelectInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_span","_excluded","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","refType","ownerDocument","capitalize","Menu","nativeSelectSelectStyles","nativeSelectIconStyles","isFilled","styled","slotShouldForwardProp","useForkRef","useControlled","selectClasses","getSelectUtilityClasses","jsx","_jsx","jsxs","_jsxs","SelectSelect","name","slot","overridesResolver","props","styles","ownerState","select","variant","multiple","height","minHeight","textOverflow","whiteSpace","overflow","SelectIcon","icon","open","iconOpen","SelectNativeInput","shouldForwardProp","prop","nativeInput","bottom","left","position","opacity","pointerEvents","width","boxSizing","areEqualValues","a","b","String","isEmpty","display","trim","useUtilityClasses","classes","disabled","slots","SelectInput","forwardRef","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","onBlur","onChange","onClose","onFocus","onOpen","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","other","setValueState","controlled","default","openState","setOpenState","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","handleRef","handleDisplayRef","useCallback","node","anchorElement","parentNode","useImperativeHandle","focus","useEffect","clientWidth","undefined","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","update","event","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","currentTarget","hasAttribute","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","length","reduce","output","menuMinWidth","buttonId","id","Fragment","Boolean","onKeyDown","onMouseDown","as","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","any","elementType","isRequired","func","oneOfType","number","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,SAASC,qBAAqB,IAAIC,sBAAlC,QAAgE,YAAhE;;AACA,IAAIC,KAAJ;;AACA,MAAMC,SAAS,GAAG,CAAC,kBAAD,EAAqB,YAArB,EAAmC,WAAnC,EAAgD,WAAhD,EAA6D,UAA7D,EAAyE,WAAzE,EAAsF,aAAtF,EAAqG,cAArG,EAAqH,UAArH,EAAiI,cAAjI,EAAiJ,eAAjJ,EAAkK,UAAlK,EAA8K,SAA9K,EAAyL,WAAzL,EAAsM,UAAtM,EAAkN,MAAlN,EAA0N,QAA1N,EAAoO,UAApO,EAAgP,SAAhP,EAA2P,SAA3P,EAAsQ,QAAtQ,EAAgR,MAAhR,EAAwR,UAAxR,EAAoS,aAApS,EAAmT,oBAAnT,EAAyU,UAAzU,EAAqV,MAArV,EAA6V,OAA7V,EAAsW,SAAtW,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,wBAAT,EAAmCC,sBAAnC,QAAiE,mCAAjE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,IAAiBC,qBAAjB,QAA8C,kBAA9C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,aAAP,IAAwBC,uBAAxB,QAAuD,iBAAvD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,MAAMC,YAAY,GAAGV,MAAM,CAAC,KAAD,EAAQ;AACjCW,EAAAA,IAAI,EAAE,WAD2B;AAEjCC,EAAAA,IAAI,EAAE,QAF2B;AAGjCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAM;AACJC,MAAAA;AADI,QAEFF,KAFJ;AAGA,WAAO,CACP;AACA;AACE,OAAE,KAAIV,aAAa,CAACa,MAAO,EAA3B,GAA+BF,MAAM,CAACE;AADxC,KAFO,EAIJ;AACD,OAAE,KAAIb,aAAa,CAACa,MAAO,EAA3B,GAA+BF,MAAM,CAACC,UAAU,CAACE,OAAZ;AADpC,KAJI,EAMJ;AACD,OAAE,KAAId,aAAa,CAACe,QAAS,EAA7B,GAAiCJ,MAAM,CAACI;AADvC,KANI,CAAP;AASD;AAhBgC,CAAR,CAAN,CAiBlBtB,wBAjBkB,EAiBQ;AAC3B;AACA,GAAE,KAAIO,aAAa,CAACa,MAAO,EAA3B,GAA+B;AAC7BG,IAAAA,MAAM,EAAE,MADqB;AAE7B;AACAC,IAAAA,SAAS,EAAE,UAHkB;AAI7B;AACAC,IAAAA,YAAY,EAAE,UALe;AAM7BC,IAAAA,UAAU,EAAE,QANiB;AAO7BC,IAAAA,QAAQ,EAAE;AAPmB;AAFJ,CAjBR,CAArB;AA6BA,MAAMC,UAAU,GAAGzB,MAAM,CAAC,KAAD,EAAQ;AAC/BW,EAAAA,IAAI,EAAE,WADyB;AAE/BC,EAAAA,IAAI,EAAE,MAFyB;AAG/BC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAM;AACJC,MAAAA;AADI,QAEFF,KAFJ;AAGA,WAAO,CAACC,MAAM,CAACW,IAAR,EAAcV,UAAU,CAACE,OAAX,IAAsBH,MAAM,CAAE,OAAMpB,UAAU,CAACqB,UAAU,CAACE,OAAZ,CAAqB,EAAvC,CAA1C,EAAqFF,UAAU,CAACW,IAAX,IAAmBZ,MAAM,CAACa,QAA/G,CAAP;AACD;AAR8B,CAAR,CAAN,CAShB9B,sBATgB,CAAnB;AAUA,MAAM+B,iBAAiB,GAAG7B,MAAM,CAAC,OAAD,EAAU;AACxC8B,EAAAA,iBAAiB,EAAEC,IAAI,IAAI9B,qBAAqB,CAAC8B,IAAD,CAArB,IAA+BA,IAAI,KAAK,SAD3B;AAExCpB,EAAAA,IAAI,EAAE,WAFkC;AAGxCC,EAAAA,IAAI,EAAE,aAHkC;AAIxCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACiB;AAJL,CAAV,CAAN,CAKvB;AACDC,EAAAA,MAAM,EAAE,CADP;AAEDC,EAAAA,IAAI,EAAE,CAFL;AAGDC,EAAAA,QAAQ,EAAE,UAHT;AAIDC,EAAAA,OAAO,EAAE,CAJR;AAKDC,EAAAA,aAAa,EAAE,MALd;AAMDC,EAAAA,KAAK,EAAE,MANN;AAODC,EAAAA,SAAS,EAAE;AAPV,CALuB,CAA1B;;AAcA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5B,MAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAnC,EAAyC;AACvC,WAAOD,CAAC,KAAKC,CAAb;AACD,GAH2B,CAK5B;;;AACA,SAAOC,MAAM,CAACF,CAAD,CAAN,KAAcE,MAAM,CAACD,CAAD,CAA3B;AACD;;AACD,SAASE,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,SAAOA,OAAO,IAAI,IAAX,IAAmB,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACA,OAAO,CAACC,IAAR,EAA1D;AACD;;AACD,MAAMC,iBAAiB,GAAG/B,UAAU,IAAI;AACtC,QAAM;AACJgC,IAAAA,OADI;AAEJ9B,IAAAA,OAFI;AAGJ+B,IAAAA,QAHI;AAIJ9B,IAAAA,QAJI;AAKJQ,IAAAA;AALI,MAMFX,UANJ;AAOA,QAAMkC,KAAK,GAAG;AACZjC,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAWC,OAAX,EAAoB+B,QAAQ,IAAI,UAAhC,EAA4C9B,QAAQ,IAAI,UAAxD,CADI;AAEZO,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAU,OAAM/B,UAAU,CAACuB,OAAD,CAAU,EAApC,EAAuCS,IAAI,IAAI,UAA/C,EAA2DsB,QAAQ,IAAI,UAAvE,CAFM;AAGZjB,IAAAA,WAAW,EAAE,CAAC,aAAD;AAHD,GAAd;AAKA,SAAOxC,cAAc,CAAC0D,KAAD,EAAQ7C,uBAAR,EAAiC2C,OAAjC,CAArB;AACD,CAdD;AAgBA;AACA;AACA;;;AACA,MAAMG,WAAW,GAAG,aAAahE,KAAK,CAACiE,UAAN,CAAiB,SAASD,WAAT,CAAqBrC,KAArB,EAA4BuC,GAA5B,EAAiC;AACjF,QAAM;AACF,wBAAoBC,eADlB;AAEF,kBAAcC,SAFZ;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA,YARE;AASFZ,IAAAA,QATE;AAUFa,IAAAA,YAVE;AAWFC,IAAAA,aAXE;AAYFC,IAAAA,QAAQ,EAAEC,YAZR;AAaFC,IAAAA,OAbE;AAcFC,IAAAA,SAAS,GAAG,EAdV;AAeFhD,IAAAA,QAfE;AAgBFR,IAAAA,IAhBE;AAiBFyD,IAAAA,MAjBE;AAkBFC,IAAAA,QAlBE;AAmBFC,IAAAA,OAnBE;AAoBFC,IAAAA,OApBE;AAqBFC,IAAAA,MArBE;AAsBF7C,IAAAA,IAAI,EAAE8C,QAtBJ;AAuBFC,IAAAA,QAvBE;AAwBFC,IAAAA,WAxBE;AAyBFC,IAAAA,kBAAkB,GAAG,EAzBnB;AA0BFC,IAAAA,QAAQ,EAAEC,YA1BR;AA2BFC,IAAAA,KAAK,EAAEC,SA3BL;AA4BF9D,IAAAA,OAAO,GAAG;AA5BR,MA6BAJ,KA7BN;AAAA,QA8BEmE,KAAK,GAAGnG,6BAA6B,CAACgC,KAAD,EAAQ5B,SAAR,CA9BvC;;AA+BA,QAAM,CAAC6F,KAAD,EAAQG,aAAR,IAAyB/E,aAAa,CAAC;AAC3CgF,IAAAA,UAAU,EAAEH,SAD+B;AAE3CI,IAAAA,OAAO,EAAEvB,YAFkC;AAG3ClD,IAAAA,IAAI,EAAE;AAHqC,GAAD,CAA5C;AAKA,QAAM,CAAC0E,SAAD,EAAYC,YAAZ,IAA4BnF,aAAa,CAAC;AAC9CgF,IAAAA,UAAU,EAAEV,QADkC;AAE9CW,IAAAA,OAAO,EAAExB,WAFqC;AAG9CjD,IAAAA,IAAI,EAAE;AAHwC,GAAD,CAA/C;AAKA,QAAMqD,QAAQ,GAAG7E,KAAK,CAACoG,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,UAAU,GAAGrG,KAAK,CAACoG,MAAN,CAAa,IAAb,CAAnB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCvG,KAAK,CAACwG,QAAN,CAAe,IAAf,CAAtC;AACA,QAAM;AACJC,IAAAA,OAAO,EAAEC;AADL,MAEF1G,KAAK,CAACoG,MAAN,CAAad,QAAQ,IAAI,IAAzB,CAFJ;AAGA,QAAM,CAACqB,iBAAD,EAAoBC,oBAApB,IAA4C5G,KAAK,CAACwG,QAAN,EAAlD;AACA,QAAMK,SAAS,GAAG9F,UAAU,CAACmD,GAAD,EAAMY,YAAN,CAA5B;AACA,QAAMgC,gBAAgB,GAAG9G,KAAK,CAAC+G,WAAN,CAAkBC,IAAI,IAAI;AACjDX,IAAAA,UAAU,CAACI,OAAX,GAAqBO,IAArB;;AACA,QAAIA,IAAJ,EAAU;AACRT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACD;AACF,GALwB,EAKtB,EALsB,CAAzB;AAMA,QAAMC,aAAa,GAAGX,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACY,UAAjE;AACAlH,EAAAA,KAAK,CAACmH,mBAAN,CAA0BN,SAA1B,EAAqC,OAAO;AAC1CO,IAAAA,KAAK,EAAE,MAAM;AACXf,MAAAA,UAAU,CAACI,OAAX,CAAmBW,KAAnB;AACD,KAHyC;AAI1CJ,IAAAA,IAAI,EAAEnC,QAAQ,CAAC4B,OAJ2B;AAK1Cb,IAAAA;AAL0C,GAAP,CAArC,EAMI,CAACA,KAAD,CANJ,EAzDiF,CAiEjF;;AACA5F,EAAAA,KAAK,CAACqH,SAAN,CAAgB,MAAM;AACpB,QAAI5C,WAAW,IAAIyB,SAAf,IAA4BI,WAA5B,IAA2C,CAACI,gBAAhD,EAAkE;AAChEE,MAAAA,oBAAoB,CAACtC,SAAS,GAAG,IAAH,GAAU2C,aAAa,CAACK,WAAlC,CAApB;AACAjB,MAAAA,UAAU,CAACI,OAAX,CAAmBW,KAAnB;AACD,KAJmB,CAKpB;;AACD,GAND,EAMG,CAACd,WAAD,EAAchC,SAAd,CANH,EAlEiF,CAyEjF;AACA;;AACAtE,EAAAA,KAAK,CAACqH,SAAN,CAAgB,MAAM;AACpB,QAAIhD,SAAJ,EAAe;AACbgC,MAAAA,UAAU,CAACI,OAAX,CAAmBW,KAAnB;AACD;AACF,GAJD,EAIG,CAAC/C,SAAD,CAJH;AAKArE,EAAAA,KAAK,CAACqH,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACtC,OAAL,EAAc;AACZ,aAAOwC,SAAP;AACD;;AACD,UAAMC,KAAK,GAAGjH,aAAa,CAAC8F,UAAU,CAACI,OAAZ,CAAb,CAAkCgB,cAAlC,CAAiD1C,OAAjD,CAAd;;AACA,QAAIyC,KAAJ,EAAW;AACT,YAAME,OAAO,GAAG,MAAM;AACpB,YAAIC,YAAY,GAAGC,WAAnB,EAAgC;AAC9BvB,UAAAA,UAAU,CAACI,OAAX,CAAmBW,KAAnB;AACD;AACF,OAJD;;AAKAI,MAAAA,KAAK,CAACK,gBAAN,CAAuB,OAAvB,EAAgCH,OAAhC;AACA,aAAO,MAAM;AACXF,QAAAA,KAAK,CAACM,mBAAN,CAA0B,OAA1B,EAAmCJ,OAAnC;AACD,OAFD;AAGD;;AACD,WAAOH,SAAP;AACD,GAjBD,EAiBG,CAACxC,OAAD,CAjBH;;AAkBA,QAAMgD,MAAM,GAAG,CAACvF,IAAD,EAAOwF,KAAP,KAAiB;AAC9B,QAAIxF,IAAJ,EAAU;AACR,UAAI6C,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAAC2C,KAAD,CAAN;AACD;AACF,KAJD,MAIO,IAAI7C,OAAJ,EAAa;AAClBA,MAAAA,OAAO,CAAC6C,KAAD,CAAP;AACD;;AACD,QAAI,CAACtB,gBAAL,EAAuB;AACrBE,MAAAA,oBAAoB,CAACtC,SAAS,GAAG,IAAH,GAAU2C,aAAa,CAACK,WAAlC,CAApB;AACAnB,MAAAA,YAAY,CAAC3D,IAAD,CAAZ;AACD;AACF,GAZD;;AAaA,QAAMyF,eAAe,GAAGD,KAAK,IAAI;AAC/B;AACA,QAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD,KAJ8B,CAK/B;;;AACAF,IAAAA,KAAK,CAACG,cAAN;AACA9B,IAAAA,UAAU,CAACI,OAAX,CAAmBW,KAAnB;AACAW,IAAAA,MAAM,CAAC,IAAD,EAAOC,KAAP,CAAN;AACD,GATD;;AAUA,QAAMI,WAAW,GAAGJ,KAAK,IAAI;AAC3BD,IAAAA,MAAM,CAAC,KAAD,EAAQC,KAAR,CAAN;AACD,GAFD;;AAGA,QAAMK,aAAa,GAAGrI,KAAK,CAACsI,QAAN,CAAeC,OAAf,CAAuBhE,QAAvB,CAAtB,CA5HiF,CA8HjF;;AACA,QAAMiE,YAAY,GAAGR,KAAK,IAAI;AAC5B,UAAMS,KAAK,GAAGJ,aAAa,CAACK,GAAd,CAAkBC,KAAK,IAAIA,KAAK,CAAChH,KAAN,CAAYiE,KAAvC,EAA8CgD,OAA9C,CAAsDZ,KAAK,CAACa,MAAN,CAAajD,KAAnE,CAAd;;AACA,QAAI6C,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACD;;AACD,UAAME,KAAK,GAAGN,aAAa,CAACI,KAAD,CAA3B;AACA1C,IAAAA,aAAa,CAAC4C,KAAK,CAAChH,KAAN,CAAYiE,KAAb,CAAb;;AACA,QAAIV,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC8C,KAAD,EAAQW,KAAR,CAAR;AACD;AACF,GAVD;;AAWA,QAAMG,eAAe,GAAGH,KAAK,IAAIX,KAAK,IAAI;AACxC,QAAIe,QAAJ,CADwC,CAGxC;;AACA,QAAI,CAACf,KAAK,CAACgB,aAAN,CAAoBC,YAApB,CAAiC,UAAjC,CAAL,EAAmD;AACjD;AACD;;AACD,QAAIjH,QAAJ,EAAc;AACZ+G,MAAAA,QAAQ,GAAGG,KAAK,CAACC,OAAN,CAAcvD,KAAd,IAAuBA,KAAK,CAACwD,KAAN,EAAvB,GAAuC,EAAlD;AACA,YAAMC,SAAS,GAAGzD,KAAK,CAACgD,OAAN,CAAcD,KAAK,CAAChH,KAAN,CAAYiE,KAA1B,CAAlB;;AACA,UAAIyD,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBN,QAAAA,QAAQ,CAACO,IAAT,CAAcX,KAAK,CAAChH,KAAN,CAAYiE,KAA1B;AACD,OAFD,MAEO;AACLmD,QAAAA,QAAQ,CAACQ,MAAT,CAAgBF,SAAhB,EAA2B,CAA3B;AACD;AACF,KARD,MAQO;AACLN,MAAAA,QAAQ,GAAGJ,KAAK,CAAChH,KAAN,CAAYiE,KAAvB;AACD;;AACD,QAAI+C,KAAK,CAAChH,KAAN,CAAY6H,OAAhB,EAAyB;AACvBb,MAAAA,KAAK,CAAChH,KAAN,CAAY6H,OAAZ,CAAoBxB,KAApB;AACD;;AACD,QAAIpC,KAAK,KAAKmD,QAAd,EAAwB;AACtBhD,MAAAA,aAAa,CAACgD,QAAD,CAAb;;AACA,UAAI7D,QAAJ,EAAc;AACZ;AACA;AACA;AACA;AACA,cAAMuE,WAAW,GAAGzB,KAAK,CAACyB,WAAN,IAAqBzB,KAAzC;AACA,cAAM0B,WAAW,GAAG,IAAID,WAAW,CAACE,WAAhB,CAA4BF,WAAW,CAACG,IAAxC,EAA8CH,WAA9C,CAApB;AACAI,QAAAA,MAAM,CAACC,cAAP,CAAsBJ,WAAtB,EAAmC,QAAnC,EAA6C;AAC3CK,UAAAA,QAAQ,EAAE,IADiC;AAE3CnE,UAAAA,KAAK,EAAE;AACLA,YAAAA,KAAK,EAAEmD,QADF;AAELvH,YAAAA;AAFK;AAFoC,SAA7C;AAOA0D,QAAAA,QAAQ,CAACwE,WAAD,EAAcf,KAAd,CAAR;AACD;AACF;;AACD,QAAI,CAAC3G,QAAL,EAAe;AACb+F,MAAAA,MAAM,CAAC,KAAD,EAAQC,KAAR,CAAN;AACD;AACF,GA3CD;;AA4CA,QAAMgC,aAAa,GAAGhC,KAAK,IAAI;AAC7B,QAAI,CAACzC,QAAL,EAAe;AACb,YAAM0E,SAAS,GAAG,CAAC,GAAD,EAAM,SAAN,EAAiB,WAAjB,EAClB;AACA;AACA,aAHkB,CAAlB;;AAIA,UAAIA,SAAS,CAACrB,OAAV,CAAkBZ,KAAK,CAACkC,GAAxB,MAAiC,CAAC,CAAtC,EAAyC;AACvClC,QAAAA,KAAK,CAACG,cAAN;AACAJ,QAAAA,MAAM,CAAC,IAAD,EAAOC,KAAP,CAAN;AACD;AACF;AACF,GAXD;;AAYA,QAAMxF,IAAI,GAAG8D,WAAW,KAAK,IAAhB,IAAwBJ,SAArC;;AACA,QAAMiE,UAAU,GAAGnC,KAAK,IAAI;AAC1B;AACA,QAAI,CAACxF,IAAD,IAASyC,MAAb,EAAqB;AACnB;AACA4E,MAAAA,MAAM,CAACC,cAAP,CAAsB9B,KAAtB,EAA6B,QAA7B,EAAuC;AACrC+B,QAAAA,QAAQ,EAAE,IAD2B;AAErCnE,QAAAA,KAAK,EAAE;AACLA,UAAAA,KADK;AAELpE,UAAAA;AAFK;AAF8B,OAAvC;AAOAyD,MAAAA,MAAM,CAAC+C,KAAD,CAAN;AACD;AACF,GAbD;;AAcA,SAAOlC,KAAK,CAAC,cAAD,CAAZ;AACA,MAAIpC,OAAJ;AACA,MAAI0G,aAAJ;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,MAAIC,UAAU,GAAG,KAAjB,CAtNiF,CAwNjF;;AACA,MAAI3J,QAAQ,CAAC;AACXgF,IAAAA;AADW,GAAD,CAAR,IAEEjB,YAFN,EAEoB;AAClB,QAAIa,WAAJ,EAAiB;AACf9B,MAAAA,OAAO,GAAG8B,WAAW,CAACI,KAAD,CAArB;AACD,KAFD,MAEO;AACL0E,MAAAA,cAAc,GAAG,IAAjB;AACD;AACF;;AACD,QAAME,KAAK,GAAGnC,aAAa,CAACK,GAAd,CAAkBC,KAAK,IAAI;AACvC,QAAI,EAAE,aAAa3I,KAAK,CAACyK,cAAN,CAAqB9B,KAArB,CAAnB,EAAgD;AAC9C,aAAO,IAAP;AACD;;AACD,QAAI+B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI3K,UAAU,CAAC0I,KAAD,CAAd,EAAuB;AACrBkC,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,iEAAD,EAAoE,sCAApE,EAA4GC,IAA5G,CAAiH,IAAjH,CAAd;AACD;AACF;;AACD,QAAIC,QAAJ;;AACA,QAAIhJ,QAAJ,EAAc;AACZ,UAAI,CAACkH,KAAK,CAACC,OAAN,CAAcvD,KAAd,CAAL,EAA2B;AACzB,cAAM,IAAIqF,KAAJ,CAAUP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAyC,iGAAzC,GAA4I/K,sBAAsB,CAAC,CAAD,CAA5K,CAAN;AACD;;AACDmL,MAAAA,QAAQ,GAAGpF,KAAK,CAACsF,IAAN,CAAWC,CAAC,IAAI9H,cAAc,CAAC8H,CAAD,EAAIxC,KAAK,CAAChH,KAAN,CAAYiE,KAAhB,CAA9B,CAAX;;AACA,UAAIoF,QAAQ,IAAIV,cAAhB,EAAgC;AAC9BD,QAAAA,eAAe,CAACf,IAAhB,CAAqBX,KAAK,CAAChH,KAAN,CAAY4C,QAAjC;AACD;AACF,KARD,MAQO;AACLyG,MAAAA,QAAQ,GAAG3H,cAAc,CAACuC,KAAD,EAAQ+C,KAAK,CAAChH,KAAN,CAAYiE,KAApB,CAAzB;;AACA,UAAIoF,QAAQ,IAAIV,cAAhB,EAAgC;AAC9BF,QAAAA,aAAa,GAAGzB,KAAK,CAAChH,KAAN,CAAY4C,QAA5B;AACD;AACF;;AACD,QAAIyG,QAAJ,EAAc;AACZT,MAAAA,UAAU,GAAG,IAAb;AACD;;AACD,WAAO,aAAavK,KAAK,CAACoL,YAAN,CAAmBzC,KAAnB,EAA0B;AAC5C,uBAAiBqC,QAAQ,GAAG,MAAH,GAAY,OADO;AAE5CxB,MAAAA,OAAO,EAAEV,eAAe,CAACH,KAAD,CAFoB;AAG5C0C,MAAAA,OAAO,EAAErD,KAAK,IAAI;AAChB,YAAIA,KAAK,CAACkC,GAAN,KAAc,GAAlB,EAAuB;AACrB;AACA;AACA;AACAlC,UAAAA,KAAK,CAACG,cAAN;AACD;;AACD,YAAIQ,KAAK,CAAChH,KAAN,CAAY0J,OAAhB,EAAyB;AACvB1C,UAAAA,KAAK,CAAChH,KAAN,CAAY0J,OAAZ,CAAoBrD,KAApB;AACD;AACF,OAb2C;AAc5CsD,MAAAA,IAAI,EAAE,QAdsC;AAe5CN,MAAAA,QAf4C;AAgB5CpF,MAAAA,KAAK,EAAE2B,SAhBqC;AAiB5C;AACA,oBAAcoB,KAAK,CAAChH,KAAN,CAAYiE,KAlBkB,CAkBZ;;AAlBY,KAA1B,CAApB;AAoBD,GA/Ca,CAAd;;AAiDA,MAAI8E,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA5K,IAAAA,KAAK,CAACqH,SAAN,CAAgB,MAAM;AACpB,UAAI,CAACkD,UAAD,IAAe,CAACvI,QAAhB,IAA4B4D,KAAK,KAAK,EAA1C,EAA8C;AAC5C,cAAM2F,MAAM,GAAGlD,aAAa,CAACK,GAAd,CAAkBC,KAAK,IAAIA,KAAK,CAAChH,KAAN,CAAYiE,KAAvC,CAAf;AACAiF,QAAAA,OAAO,CAACW,IAAR,CAAa,CAAE,kDAAiD5F,KAAM,qBAAoBpE,IAAI,GAAI,UAASA,IAAK,KAAlB,GAAyB,EAAG,YAA7G,EAA0H,6EAA1H,EAA0M,4BAA2B+J,MAAM,CAACE,MAAP,CAAcC,CAAC,IAAIA,CAAC,IAAI,IAAxB,EAA8BhD,GAA9B,CAAkCgD,CAAC,IAAK,KAAIA,CAAE,IAA9C,EAAmDX,IAAnD,CAAwD,IAAxD,KAAiE,IAAK,GAA3S,EAA+SA,IAA/S,CAAoT,IAApT,CAAb;AACD;AACF,KALD,EAKG,CAACR,UAAD,EAAalC,aAAb,EAA4BrG,QAA5B,EAAsCR,IAAtC,EAA4CoE,KAA5C,CALH;AAMD;;AACD,MAAI0E,cAAJ,EAAoB;AAClB,QAAItI,QAAJ,EAAc;AACZ,UAAIqI,eAAe,CAACsB,MAAhB,KAA2B,CAA/B,EAAkC;AAChCjI,QAAAA,OAAO,GAAG,IAAV;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,GAAG2G,eAAe,CAACuB,MAAhB,CAAuB,CAACC,MAAD,EAASlD,KAAT,EAAgBF,KAAhB,KAA0B;AACzDoD,UAAAA,MAAM,CAACvC,IAAP,CAAYX,KAAZ;;AACA,cAAIF,KAAK,GAAG4B,eAAe,CAACsB,MAAhB,GAAyB,CAArC,EAAwC;AACtCE,YAAAA,MAAM,CAACvC,IAAP,CAAY,IAAZ;AACD;;AACD,iBAAOuC,MAAP;AACD,SANS,EAMP,EANO,CAAV;AAOD;AACF,KAZD,MAYO;AACLnI,MAAAA,OAAO,GAAG0G,aAAV;AACD;AACF,GA5SgF,CA8SjF;;;AACA,MAAI0B,YAAY,GAAGnF,iBAAnB;;AACA,MAAI,CAACrC,SAAD,IAAcoC,gBAAd,IAAkCJ,WAAtC,EAAmD;AACjDwF,IAAAA,YAAY,GAAG7E,aAAa,CAACK,WAA7B;AACD;;AACD,MAAI5B,QAAJ;;AACA,MAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;AACvCD,IAAAA,QAAQ,GAAGC,YAAX;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,GAAG5B,QAAQ,GAAG,IAAH,GAAU,CAA7B;AACD;;AACD,QAAMiI,QAAQ,GAAGtG,kBAAkB,CAACuG,EAAnB,KAA0BxK,IAAI,GAAI,wBAAuBA,IAAK,EAAhC,GAAoC+F,SAAlE,CAAjB;;AACA,QAAM1F,UAAU,GAAGnC,QAAQ,CAAC,EAAD,EAAKiC,KAAL,EAAY;AACrCI,IAAAA,OADqC;AAErC6D,IAAAA,KAFqC;AAGrCpD,IAAAA;AAHqC,GAAZ,CAA3B;;AAKA,QAAMqB,OAAO,GAAGD,iBAAiB,CAAC/B,UAAD,CAAjC;AACA,SAAO,aAAaP,KAAK,CAACtB,KAAK,CAACiM,QAAP,EAAiB;AACxC1H,IAAAA,QAAQ,EAAE,CAAC,aAAanD,IAAI,CAACG,YAAD,EAAe7B,QAAQ,CAAC;AAClDwE,MAAAA,GAAG,EAAE4C,gBAD6C;AAElDpB,MAAAA,QAAQ,EAAEA,QAFwC;AAGlD4F,MAAAA,IAAI,EAAE,QAH4C;AAIlD,uBAAiBxH,QAAQ,GAAG,MAAH,GAAYyD,SAJa;AAKlD,uBAAiB/E,IAAI,GAAG,MAAH,GAAY,OALiB;AAMlD,uBAAiB,SANiC;AAOlD,oBAAc4B,SAPoC;AAQlD,yBAAmB,CAACW,OAAD,EAAUgH,QAAV,EAAoBN,MAApB,CAA2BS,OAA3B,EAAoCnB,IAApC,CAAyC,GAAzC,KAAiDxD,SARlB;AASlD,0BAAoBpD,eAT8B;AAUlDgI,MAAAA,SAAS,EAAEnC,aAVuC;AAWlDoC,MAAAA,WAAW,EAAEtI,QAAQ,IAAIyB,QAAZ,GAAuB,IAAvB,GAA8B0C,eAXO;AAYlDhD,MAAAA,MAAM,EAAEkF,UAZ0C;AAalD/E,MAAAA,OAAO,EAAEA;AAbyC,KAAD,EAchDK,kBAdgD,EAc5B;AACrB5D,MAAAA,UAAU,EAAEA,UADS;AAErB2C,MAAAA,SAAS,EAAErE,IAAI,CAACsF,kBAAkB,CAACjB,SAApB,EAA+BX,OAAO,CAAC/B,MAAvC,EAA+C0C,SAA/C,CAFM,CAGrB;AAHqB;AAKrBwH,MAAAA,EAAE,EAAED,QALiB;AAMrBxH,MAAAA,QAAQ,EAAEd,OAAO,CAACC,OAAD,CAAP,GAAmB;AAC7B5D,MAAAA,KAAK,KAAKA,KAAK,GAAG,aAAasB,IAAI,CAAC,MAAD,EAAS;AAC1CoD,QAAAA,SAAS,EAAE,aAD+B;AAE1CD,QAAAA,QAAQ,EAAE;AAFgC,OAAT,CAA9B,CADK,GAIJb;AAVe,KAd4B,CAAvB,CAAlB,EAyBL,aAAatC,IAAI,CAACsB,iBAAD,EAAoBhD,QAAQ,CAAC;AACjDkG,MAAAA,KAAK,EAAEsD,KAAK,CAACC,OAAN,CAAcvD,KAAd,IAAuBA,KAAK,CAACmF,IAAN,CAAW,GAAX,CAAvB,GAAyCnF,KADC;AAEjDpE,MAAAA,IAAI,EAAEA,IAF2C;AAGjD0C,MAAAA,GAAG,EAAEW,QAH4C;AAIjD,qBAAe,IAJkC;AAKjDK,MAAAA,QAAQ,EAAEsD,YALuC;AAMjD9C,MAAAA,QAAQ,EAAE,CAAC,CANsC;AAOjD5B,MAAAA,QAAQ,EAAEA,QAPuC;AAQjDU,MAAAA,SAAS,EAAEX,OAAO,CAAChB,WAR8B;AASjDwB,MAAAA,SAAS,EAAEA,SATsC;AAUjDxC,MAAAA,UAAU,EAAEA;AAVqC,KAAD,EAW/CiE,KAX+C,CAA5B,CAzBZ,EAoCE,aAAa1E,IAAI,CAACkB,UAAD,EAAa;AACxC+J,MAAAA,EAAE,EAAEzH,aADoC;AAExCJ,MAAAA,SAAS,EAAEX,OAAO,CAACtB,IAFqB;AAGxCV,MAAAA,UAAU,EAAEA;AAH4B,KAAb,CApCnB,EAwCN,aAAaT,IAAI,CAACX,IAAD,EAAOf,QAAQ,CAAC;AACnCsM,MAAAA,EAAE,EAAG,QAAOxK,IAAI,IAAI,EAAG,EADY;AAEnC8K,MAAAA,QAAQ,EAAErF,aAFyB;AAGnCzE,MAAAA,IAAI,EAAEA,IAH6B;AAInC2C,MAAAA,OAAO,EAAEiD,WAJ0B;AAKnCmE,MAAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OALqB;AASnCC,MAAAA,eAAe,EAAE;AACfF,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG;AATkB,KAAD,EAajCzH,SAbiC,EAatB;AACZ2H,MAAAA,aAAa,EAAEjN,QAAQ,CAAC;AACtB,2BAAmBqF,OADG;AAEtBuG,QAAAA,IAAI,EAAE,SAFgB;AAGtBsB,QAAAA,eAAe,EAAE;AAHK,OAAD,EAIpB5H,SAAS,CAAC2H,aAJU,CADX;AAMZE,MAAAA,UAAU,EAAEnN,QAAQ,CAAC,EAAD,EAAKsF,SAAS,CAAC6H,UAAf,EAA2B;AAC7CC,QAAAA,KAAK,EAAEpN,QAAQ,CAAC;AACdqN,UAAAA,QAAQ,EAAEjB;AADI,SAAD,EAEZ9G,SAAS,CAAC6H,UAAV,IAAwB,IAAxB,GAA+B7H,SAAS,CAAC6H,UAAV,CAAqBC,KAApD,GAA4D,IAFhD;AAD8B,OAA3B,CANR;AAWZvI,MAAAA,QAAQ,EAAEiG;AAXE,KAbsB,CAAf,CAxCX;AAD8B,GAAjB,CAAzB;AAoED,CApYgC,CAAjC;AAqYAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC5G,WAAW,CAACgJ,SAAZ,GAAwB;AAC9D;AACF;AACA;AACE,sBAAoB9M,SAAS,CAAC+M,MAJgC;;AAK9D;AACF;AACA;AACE,gBAAc/M,SAAS,CAAC+M,MARsC;;AAS9D;AACF;AACA;AACE5I,EAAAA,SAAS,EAAEnE,SAAS,CAACgN,IAZyC;;AAa9D;AACF;AACA;AACA;AACE5I,EAAAA,SAAS,EAAEpE,SAAS,CAACgN,IAjByC;;AAkB9D;AACF;AACA;AACA;AACE3I,EAAAA,QAAQ,EAAErE,SAAS,CAAC8G,IAtB0C;;AAuB9D;AACF;AACA;AACA;AACEnD,EAAAA,OAAO,EAAE3D,SAAS,CAACiN,MA3B2C;;AA4B9D;AACF;AACA;AACE3I,EAAAA,SAAS,EAAEtE,SAAS,CAAC+M,MA/ByC;;AAgC9D;AACF;AACA;AACA;AACExI,EAAAA,WAAW,EAAEvE,SAAS,CAACgN,IApCuC;;AAqC9D;AACF;AACA;AACExI,EAAAA,YAAY,EAAExE,SAAS,CAACkN,GAxCsC;;AAyC9D;AACF;AACA;AACEtJ,EAAAA,QAAQ,EAAE5D,SAAS,CAACgN,IA5C0C;;AA6C9D;AACF;AACA;AACEvI,EAAAA,YAAY,EAAEzE,SAAS,CAACgN,IAhDsC;;AAiD9D;AACF;AACA;AACEtI,EAAAA,aAAa,EAAE1E,SAAS,CAACmN,WAAV,CAAsBC,UApDyB;;AAqD9D;AACF;AACA;AACA;AACEzI,EAAAA,QAAQ,EAAEvE,OAzDoD;;AA0D9D;AACF;AACA;AACA;AACEyE,EAAAA,OAAO,EAAE7E,SAAS,CAAC+M,MA9D2C;;AA+D9D;AACF;AACA;AACEjI,EAAAA,SAAS,EAAE9E,SAAS,CAACiN,MAlEyC;;AAmE9D;AACF;AACA;AACEnL,EAAAA,QAAQ,EAAE9B,SAAS,CAACgN,IAtE0C;;AAuE9D;AACF;AACA;AACE1L,EAAAA,IAAI,EAAEtB,SAAS,CAAC+M,MA1E8C;;AA2E9D;AACF;AACA;AACEhI,EAAAA,MAAM,EAAE/E,SAAS,CAACqN,IA9E4C;;AA+E9D;AACF;AACA;AACA;AACA;AACA;AACA;AACErI,EAAAA,QAAQ,EAAEhF,SAAS,CAACqN,IAtF0C;;AAuF9D;AACF;AACA;AACA;AACA;AACA;AACEpI,EAAAA,OAAO,EAAEjF,SAAS,CAACqN,IA7F2C;;AA8F9D;AACF;AACA;AACEnI,EAAAA,OAAO,EAAElF,SAAS,CAACqN,IAjG2C;;AAkG9D;AACF;AACA;AACA;AACA;AACA;AACElI,EAAAA,MAAM,EAAEnF,SAAS,CAACqN,IAxG4C;;AAyG9D;AACF;AACA;AACE/K,EAAAA,IAAI,EAAEtC,SAAS,CAACgN,IA5G8C;;AA6G9D;AACF;AACA;AACE3H,EAAAA,QAAQ,EAAErF,SAAS,CAACgN,IAhH0C;;AAiH9D;AACF;AACA;AACA;AACA;AACA;AACE1H,EAAAA,WAAW,EAAEtF,SAAS,CAACqN,IAvHuC;;AAwH9D;AACF;AACA;AACE9H,EAAAA,kBAAkB,EAAEvF,SAAS,CAACiN,MA3HgC;;AA4H9D;AACF;AACA;AACEzH,EAAAA,QAAQ,EAAExF,SAAS,CAACsN,SAAV,CAAoB,CAACtN,SAAS,CAACuN,MAAX,EAAmBvN,SAAS,CAAC+M,MAA7B,CAApB,CA/HoD;;AAgI9D;AACF;AACA;AACErD,EAAAA,IAAI,EAAE1J,SAAS,CAACkN,GAnI8C;;AAoI9D;AACF;AACA;AACExH,EAAAA,KAAK,EAAE1F,SAAS,CAACkN,GAvI6C;;AAwI9D;AACF;AACA;AACErL,EAAAA,OAAO,EAAE7B,SAAS,CAACwN,KAAV,CAAgB,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,CAAhB;AA3IqD,CAAhE,GA4II,KAAK,CA5IT;AA6IA,eAAe1J,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nvar _span;\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [\n    // Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n\n/**\n * @ignore - internal component.\n */\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-label': ariaLabel,\n      autoFocus,\n      autoWidth,\n      children,\n      className,\n      defaultOpen,\n      defaultValue,\n      disabled,\n      displayEmpty,\n      IconComponent,\n      inputRef: inputRefProp,\n      labelId,\n      MenuProps = {},\n      multiple,\n      name,\n      onBlur,\n      onChange,\n      onClose,\n      onFocus,\n      onOpen,\n      open: openProp,\n      readOnly,\n      renderValue,\n      SelectDisplayProps = {},\n      tabIndex: tabIndexProp,\n      value: valueProp,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n\n  // Resize menu on `defaultOpen` automatic toggle.\n  React.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      displayRef.current.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayNode, autoWidth]);\n  // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n    return undefined;\n  }, [labelId]);\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      setOpenState(open);\n    }\n  };\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    }\n    // Hijack the default focus behavior.\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n  const handleClose = event => {\n    update(false, event);\n  };\n  const childrenArray = React.Children.toArray(children);\n\n  // Support autofill.\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n    if (index === -1) {\n      return;\n    }\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n  const handleItemClick = child => event => {\n    let newValue;\n\n    // We use the tabindex attribute to signal the available options.\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n    if (value !== newValue) {\n      setValueState(newValue);\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown',\n      // The native select doesn't respond to enter on macOS, but it's recommended by\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n      'Enter'];\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n  const open = displayNode !== null && openState;\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false;\n\n  // No need to display any value if the field is empty.\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    let selected;\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n      selected = value.some(v => areEqualValues(v, child.props.value));\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n    if (selected) {\n      foundMatch = true;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n          if (index < displayMultiple.length - 1) {\n            output.push(', ');\n          }\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  }\n\n  // Avoid performing a layout computation in the render method.\n  let menuMinWidth = menuMinWidthState;\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = anchorElement.clientWidth;\n  }\n  let tabIndex;\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(SelectDisplayProps.className, classes.select, className)\n      // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      })) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: anchorElement,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n  /**\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}