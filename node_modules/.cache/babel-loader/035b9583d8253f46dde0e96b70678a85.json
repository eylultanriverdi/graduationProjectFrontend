{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\proje\\\\graduationProjectFrontend\\\\src\\\\components\\\\CalorieInfoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\nimport axios from 'axios';\nimport { CircularProgress, Grid, Paper, Typography, IconButton, Button, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalorieInfoPage = props => {\n  _s();\n  const {\n    allProducts,\n    calorieInfoList,\n    createCalorieInfo\n  } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const fetchProducts = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\n      if (resp && resp.status === 200) {\n        const {\n          pagination,\n          products\n        } = resp.data;\n        const {\n          totalPages\n        } = pagination;\n        const decodedProducts = products.map(product => {\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\n          return {\n            ...product,\n            productImage: base64Image\n          };\n        });\n        props.setProducts(decodedProducts);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  const productSearch = async () => {\n    const resp = await axios.get(`http://localhost:3001/productSearch`);\n    return resp.status == 200 ? resp : false;\n  };\n  const deleteSearch = () => {\n    setCurrentSearch(\"\");\n    setIsSearched(false);\n    productSearch();\n  };\n  const searchKey = keyEvent => {\n    if (keyEvent === \"Enter\") {\n      productSearch();\n    }\n  };\n  const calculateTotalCalories = () => {\n    let total = 0;\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\n\n    if (calorieInfoList && calorieInfoList.length > 0) {\n      // İlgili tarih bilgisine sahip ürünleri bul\n      const productsWithSameDate = calorieInfoList.filter(calorieInfo => {\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\n        return entryDate === currentDate;\n      });\n      if (productsWithSameDate.length > 0) {\n        // Toplam kalori değerini hesapla\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\n          return sum + parseInt(calorieInfo.totalCalorie);\n        }, 0);\n      }\n    }\n    return total;\n  };\n  const fetchCalorieInfoList = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\n      if (resp && resp.status === 200) {\n        props.setCalorieInfoList(resp.data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  useEffect(() => {\n    fetchCalorieInfoList();\n  }, []);\n  useEffect(() => {\n    setTotalCalories(calculateTotalCalories());\n  }, [calorieInfoList]);\n  const handleAddToList = async productId => {\n    const currentDate = new Date().toISOString().slice(0, 10);\n    try {\n      const selectedProduct = allProducts.find(product => product.productId === productId);\n      if (selectedProduct) {\n        const {\n          productId,\n          productName,\n          description,\n          productImage,\n          proteinValue,\n          carbohydrateValue,\n          oilValue,\n          glutenValue,\n          ketogenicDiet,\n          glutenFree,\n          saltFree,\n          calorieValue\n        } = selectedProduct;\n        const resp = await axios.post(`http://localhost:3001/addList`, {\n          calorieListId: \"\",\n          products: [{\n            productId: productId,\n            productName: productName,\n            description: description,\n            productImage: \"\",\n            proteinValue: proteinValue,\n            carbohydrateValue: carbohydrateValue,\n            oilValue: oilValue,\n            glutenValue: glutenValue,\n            ketogenicDiet: ketogenicDiet,\n            glutenFree: glutenFree,\n            saltFree: glutenFree,\n            calorieValue: calorieValue\n          }],\n          totalCalorie: calorieValue,\n          createDate: currentDate\n        });\n        createCalorieInfo(resp.data);\n        setTotalCalories(totalCalories + parseInt(calorieValue));\n      } else {\n        console.log('Product not found');\n      }\n    } catch (error) {\n      console.log('Error:', error.response);\n    }\n  };\n  const renderProductList = calorieInfoList && calorieInfoList.map(calorieInfo => {\n    const {\n      products\n    } = calorieInfo;\n    return products && products.map(product => {\n      const {\n        productId,\n        productName,\n        description,\n        productImage,\n        carbohydrateValue,\n        glutenFree,\n        glutenValue,\n        ketogenicDiet,\n        oilValue,\n        proteinValue,\n        saltFree,\n        calorieValue\n      } = product;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: {\n          marginTop: '50px',\n          marginBottom: '80px',\n          padding: '20px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              style: {\n                marginBottom: '10px'\n              },\n              children: productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Protein: \", proteinValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Hidrat: \", carbohydrateValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ya\\u011F: \", oilValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten De\\u011Feri: \", glutenValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Gluten Free: \", glutenFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Ketogenic Diet: \", ketogenicDiet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Salt Free: \", saltFree]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              children: [\"Kalori: \", calorieValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"small\",\n              style: {\n                position: 'absolute',\n                bottom: '10px',\n                right: '10px'\n              },\n              onClick: () => handleAddToList(productId),\n              children: \"Add to Today's List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Calorie Info Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        gutterBottom: true,\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          value: currentSearch,\n          onChange: e => setCurrentSearch(e.target.value),\n          onKeyPress: event => searchKey(event.key),\n          variant: \"outlined\",\n          size: \"small\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                style: {\n                  display: currentSearch.length > 0 ? \"block\" : \"none\"\n                },\n                onClick: deleteSearch,\n                children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                  htmlColor: \"#2F455C\",\n                  style: {\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: productSearch(),\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => handleAddToList(productId),\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: '200px',\n            height: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            variant: \"determinate\",\n            value: totalCalories / 3000 * 100,\n            size: 200,\n            thickness: 2,\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)'\n            },\n            children: totalCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), renderProductList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieInfoPage, \"Y/RdrA4VbtzEC7aoYhfdhgBdLik=\");\n_c = CalorieInfoPage;\nconst mapStateToProps = state => ({\n  allProducts: state.allProducts.products,\n  calorieInfoList: state.calorieInfoList.products\n});\nconst mapDispatchToProps = {\n  setProducts,\n  setCalorieInfoList,\n  createCalorieInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\nvar _c;\n$RefreshReg$(_c, \"CalorieInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","connect","createCalorieInfo","setCalorieInfoList","setProducts","axios","CircularProgress","Grid","Paper","Typography","IconButton","Button","TextField","SearchIcon","ClearIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CalorieInfoPage","props","_s","allProducts","calorieInfoList","currentPage","setCurrentPage","productsPerPage","totalCalories","setTotalCalories","currentSearch","setCurrentSearch","fetchProducts","resp","get","status","pagination","products","data","totalPages","decodedProducts","map","product","base64Image","productImage","error","console","log","productSearch","deleteSearch","setIsSearched","searchKey","keyEvent","calculateTotalCalories","total","currentDate","Date","toISOString","split","length","productsWithSameDate","filter","calorieInfo","entryDate","createDate","reduce","sum","parseInt","totalCalorie","fetchCalorieInfoList","handleAddToList","productId","slice","selectedProduct","find","productName","description","proteinValue","carbohydrateValue","oilValue","glutenValue","ketogenicDiet","glutenFree","saltFree","calorieValue","post","calorieListId","response","renderProductList","elevation","style","marginTop","marginBottom","padding","position","children","container","spacing","item","xs","sm","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","size","bottom","right","onClick","gutterBottom","onSubmit","e","preventDefault","type","value","onChange","target","onKeyPress","event","key","InputProps","endAdornment","display","htmlColor","fontSize","justifyContent","alignItems","flexDirection","width","height","thickness","top","left","transform","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/proje/graduationProjectFrontend/src/components/CalorieInfoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCalorieInfo, setCalorieInfoList, setProducts } from '../redux/actions/productActions';\r\nimport axios from 'axios';\r\nimport { CircularProgress, Grid, Paper, Typography, IconButton,Button, TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nconst CalorieInfoPage = (props) => {\r\n  const { allProducts, calorieInfoList, createCalorieInfo } = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(10); // Her sayfada kaç ürün gösterileceği\r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n  const [currentSearch, setCurrentSearch] = useState(\"\")\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/products?page=${currentPage}&limit=${productsPerPage}`);\r\n      if (resp && resp.status === 200) {\r\n        const { pagination, products } = resp.data;\r\n        const { totalPages } = pagination;\r\n\r\n        const decodedProducts = products.map((product) => {\r\n          const base64Image = `data:image/jpeg;base64,${product.productImage}`;\r\n          return {\r\n            ...product,\r\n            productImage: base64Image\r\n          };\r\n        });\r\n\r\n        props.setProducts(decodedProducts);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  const productSearch = async () => {\r\n    const resp = await axios.get(\r\n      `http://localhost:3001/productSearch`,\r\n    )\r\n    return resp.status == 200 ? resp : false\r\n  }\r\n\r\n  \r\n  const deleteSearch = () => {\r\n    setCurrentSearch(\"\");\r\n    setIsSearched(false)\r\n    productSearch()\r\n\r\n}\r\n\r\nconst searchKey = (keyEvent) => {\r\n    if (keyEvent === \"Enter\") {\r\n      productSearch()\r\n    }\r\n  }\r\n\r\n\r\n  const calculateTotalCalories = () => {\r\n    let total = 0;\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Bugünün tarihini al\r\n\r\n    if (calorieInfoList && calorieInfoList.length > 0) {\r\n      // İlgili tarih bilgisine sahip ürünleri bul\r\n      const productsWithSameDate = calorieInfoList.filter((calorieInfo) => {\r\n        const entryDate = new Date(calorieInfo.createDate).toISOString().split('T')[0];\r\n        return entryDate === currentDate;\r\n      });\r\n\r\n      if (productsWithSameDate.length > 0) {\r\n        // Toplam kalori değerini hesapla\r\n        total = productsWithSameDate.reduce((sum, calorieInfo) => {\r\n          return sum + parseInt(calorieInfo.totalCalorie);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  const fetchCalorieInfoList = async () => {\r\n    try {\r\n      const resp = await axios.get(`http://localhost:3001/calorieInfo`);\r\n      if (resp && resp.status === 200) {\r\n        props.setCalorieInfoList(resp.data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchCalorieInfoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalCalories(calculateTotalCalories());\r\n  }, [calorieInfoList]);\r\n\r\n  const handleAddToList = async (productId) => {\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n\r\n    try {\r\n      const selectedProduct = allProducts.find((product) => product.productId === productId);\r\n\r\n      if (selectedProduct) {\r\n        const {\r\n          productId,\r\n          productName,\r\n          description,\r\n          productImage,\r\n          proteinValue,\r\n          carbohydrateValue,\r\n          oilValue,\r\n          glutenValue,\r\n          ketogenicDiet,\r\n          glutenFree,\r\n          saltFree,\r\n          calorieValue\r\n        } = selectedProduct;\r\n\r\n        const resp = await axios.post(`http://localhost:3001/addList`, {\r\n          calorieListId: \"\",\r\n          products: [\r\n            {\r\n              productId: productId,\r\n              productName: productName,\r\n              description: description,\r\n              productImage: \"\",\r\n              proteinValue: proteinValue,\r\n              carbohydrateValue: carbohydrateValue,\r\n              oilValue: oilValue,\r\n              glutenValue: glutenValue,\r\n              ketogenicDiet: ketogenicDiet,\r\n              glutenFree: glutenFree,\r\n              saltFree: glutenFree,\r\n              calorieValue: calorieValue\r\n            }\r\n          ],\r\n          totalCalorie: calorieValue,\r\n          createDate: currentDate\r\n        });\r\n\r\n        createCalorieInfo(resp.data);\r\n        setTotalCalories(totalCalories + parseInt(calorieValue));\r\n      } else {\r\n        console.log('Product not found');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error.response);\r\n    }\r\n  };\r\n\r\n  const renderProductList = calorieInfoList && calorieInfoList.map((calorieInfo) => {\r\n    const { products } = calorieInfo;\r\n\r\n    return products && products.map((product) => {\r\n      const {\r\n        productId,\r\n        productName,\r\n        description,\r\n        productImage,\r\n        carbohydrateValue,\r\n        glutenFree,\r\n        glutenValue,\r\n        ketogenicDiet,\r\n        oilValue,\r\n        proteinValue,\r\n        saltFree,\r\n        calorieValue\r\n      } = product;\r\n\r\n      return (\r\n        <Paper elevation={10} style={{ marginTop: '50px', marginBottom: '80px', padding: '20px', position: 'relative' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={8}>\r\n              <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '10px' }}>\r\n                {productName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                {description}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Protein: {proteinValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Hidrat: {carbohydrateValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Yağ: {oilValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Değeri: {glutenValue}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Gluten Free: {glutenFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Ketogenic Diet: {ketogenicDiet}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\" style={{ marginBottom: '5px' }}>\r\n                Salt Free: {saltFree}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\">\r\n                Kalori: {calorieValue}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                style={{ position: 'absolute', bottom: '10px', right: '10px' }}\r\n                onClick={() => handleAddToList(productId)}\r\n              >\r\n                Add to Today's List\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"white\" }}>Calorie Info Page</h1>\r\n      <Paper elevation={3} style={{ padding: '20px', marginBottom: '20px' }}>\r\n        <Typography variant=\"h5\" color='secondary' gutterBottom>\r\n          Add Food\r\n        </Typography>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n        <TextField\r\n                type=\"text\"\r\n                value={currentSearch}\r\n                onChange={(e) => setCurrentSearch(e.target.value)}\r\n                onKeyPress= {(event) => searchKey(event.key)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                    display: currentSearch.length > 0 ? \"block\" : \"none\",\r\n                                }}\r\n                                onClick={deleteSearch}\r\n                            >\r\n                                <ClearIcon\r\n                                    htmlColor=\"#2F455C\"\r\n                                    style={{ fontSize: \"18px\" }}\r\n                                />\r\n                            </IconButton>\r\n\r\n\r\n                            <IconButton size=\"small\" onClick={productSearch()}>\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                        </>\r\n                    ),\r\n                }}\r\n            />\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAddToList(productId)}>\r\n            Add Food\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n      <div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n          <div style={{ position: 'relative', width: '200px', height: '200px' }}>\r\n            <CircularProgress\r\n              variant=\"determinate\"\r\n              value={(totalCalories / 3000) * 100}\r\n              size={200}\r\n              thickness={2}\r\n              color=\"secondary\"\r\n            />\r\n            <Typography variant=\"h4\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n              {totalCalories}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {renderProductList}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProducts: state.allProducts.products,\r\n  calorieInfoList: state.calorieInfoList.products\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setProducts,\r\n  setCalorieInfoList,\r\n  createCalorieInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalorieInfoPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}